include:
  - project: 'redmic-project/gitlab-ci-templates'
    ref: master
    file: '/license-listing.yml'
  - project: 'redmic-project/gitlab-ci-templates'
    ref: master
    file: '/packaging.yml'
  - project: 'redmic-project/gitlab-ci-templates'
    ref: master
    file: '/deployment.yml'

stages:
  - pre-build
  - test-code
  - build
  - license-list
  - package
  - test-package
  - deploy
  - test-deploy

variables:
  STACK: client
  WEB_BUILD_IMAGE_NAME: registry.gitlab.com/redmic-project/docker/web-build
  WEB_BUILD_IMAGE_TAG: latest

.web-build:
  image: ${WEB_BUILD_IMAGE_NAME}:${WEB_BUILD_IMAGE_TAG}
  cache:
    paths:
      - node_modules/
      - public/javascript/redmic-widgets/node_modules/
      - public/javascript/templates/node_modules/
      - public/stylesheets/node_modules/
    policy: pull

.prepare-dependencies:
  extends: .web-build
  variables:
    GIT_SUBMODULE_STRATEGY: normal
  before_script:
    - type yarn grunt java
    - yarn install || yarn install

prepare-unbuilt-version:
  stage: pre-build
  extends: .prepare-dependencies
  script:
    - grunt preBuild
  only:
    - branches
  except:
    - master
    - schedules
  cache:
    policy: pull-push
  artifacts:
    name: ${CI_JOB_NAME}_${CI_COMMIT_REF_NAME}
    expire_in: 1 week
    paths:
      - node_modules/
      - public/javascript/proj4js/dist/proj4.js
      - public/javascript/redmic-widgets/src/app/
      - public/javascript/templates/dist/
      - public/stylesheets/style.styl
      - public/stylesheets/src/
      - public/stylesheets/submodules/

run-unit-tests:
  stage: test-code
  extends: .web-build
  script:
    - grunt test | tee test.out
    - coverage=$(grep '^All files.*' test.out | cut -d '|' -f 2 | tr -d ' ')
    - echo "Coverage - ${coverage}%"
    - rm test.out
  only:
    - branches
  except:
    - master
    - schedules

run-modules-functional-tests:
  stage: test-code
  extends: .web-build
  script:
    - npm start &
    - grunt test-functional-local --functionalSuites=tests/functional/modules/**/!\(*Script\).js --headless
  only:
    - branches
  except:
    - master
    - schedules

prepare-built-version:
  stage: build
  extends: .prepare-dependencies
  script:
    - grunt
  only:
    - branches
  except:
    - schedules
  dependencies: []
  artifacts:
    name: ${CI_JOB_NAME}_${CI_COMMIT_REF_NAME}
    expire_in: 1 month
    paths:
      - dist*.tar.gz

.deploy:
  script:
    - >
      deploy.sh IMAGE_NAME=${IMAGE_NAME} IMAGE_TAG=${IMAGE_TAG} COMPOSE_FILE=${COMPOSE_FILE}
      PUBLIC_HOSTNAME=${PUBLIC_HOSTNAME} OAUTH_URL=${OAUTH_URL} OAUTH_CLIENT_SECRET=${OAUTH_CLIENT_SECRET}
      API_URL=${API_URL} PRODUCTION=${PRODUCTION}
  environment:
    url: https://${PUBLIC_HOSTNAME}

.deploy-development:
  variables:
    PRODUCTION: 0

.deploy-production:
  variables:
    PRODUCTION: 1

run-functional-tests:
  stage: test-deploy
  extends: .prepare-dependencies
  script:
    - >
      grunt test-functional-local --serverUrl="https://${DEV_PUBLIC_HOSTNAME}" --user="${REDMIC_TEST_USER}"
      --pass="${REDMIC_TEST_PASS}" --role=administrator --suitesGroups="${SUITES_GROUPS}" --headless
  only:
    - schedules
  cache:
    paths:
      - node_modules/
  dependencies: []
  artifacts:
    name: ${CI_JOB_NAME}_${CI_COMMIT_REF_NAME}
    expire_in: 1 month
    when: always
    paths:
      - 'test_reports/test-functional-local*'

