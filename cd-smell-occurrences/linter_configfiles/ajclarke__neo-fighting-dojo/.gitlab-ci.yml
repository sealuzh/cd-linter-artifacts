image: gitlab/dind:latest

before_script:
  # Install ssh-agent if not already installed, it is required by Docker.
  # (change apt-get to yum if you use a CentOS-based image)
  - 'which ssh-agent || ( apt-get update -y && apt-get install openssh-client -y )'

  # Run ssh-agent (inside the build environment)
  - eval $(ssh-agent -s)

  # Add the SSH key stored in SSH_PRIVATE_KEY variable to the agent store
  - ssh-add <(echo "$SSH_PRIVATE_KEY")

  # For Docker builds disable host key checking. Be aware that by adding that
  # you are suspectible to man-in-the-middle attacks.
  # WARNING: Use this only with the Docker executor, if you use it with shell
  # you will overwrite your user's SSH config.
  - mkdir -p ~/.ssh
  - '[[ -f /.dockerenv ]] && echo -e "Host *\n\tStrictHostKeyChecking no\n\n" > ~/.ssh/config'

build:
  stage: build
  script:
    - docker login -u gitlab-ci-token -p $CI_BUILD_TOKEN registry.gitlab.com
    - docker-compose build linux
    - docker build -t registry.gitlab.com/ajclarke/neo-fighting-dojo:$CI_COMMIT_SHA -f docker/linux-prd .

    # Copy and extract the binaries as an artifact
    - docker run -v $CI_PROJECT_DIR/build/linux-prd:/build registry.gitlab.com/ajclarke/neo-fighting-dojo:$CI_COMMIT_SHA ./copy-artifacts.sh
    - docker push registry.gitlab.com/ajclarke/neo-fighting-dojo:$CI_COMMIT_SHA

  artifacts:
    paths:
    - build/linux-prd/
  only:
    - development
test:
  stage: test
  script:
    - docker run registry.gitlab.com/ajclarke/neo-fighting-dojo:$CI_COMMIT_SHA
  only:
    - development

