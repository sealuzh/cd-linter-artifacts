# This file is a template, and might need editing before it works on your project.
# Official language image. Look for the different tagged releases at:
# https://hub.docker.com/r/library/ruby/tags/
image: "starefossen/ruby-node:latest"

# Pick zero or more services to be used on all builds.
# Only needed when using a docker container to run your tests in.
# Check out: http://docs.gitlab.com/ce/ci/docker/using_docker_images.html#what-is-a-service
services:
  - postgres:latest

variables:
  POSTGRES_DB: pip_test_1_test
  DATABASE_URL: "postgresql://postgres:postgres@postgres:5432/$POSTGRES_DB"


# Cache gems in between builds
cache:
  paths:
    - vendor/ruby

# This is a basic example for a gem or script which doesn't use
# services such as redis or postgres
before_script:
  - ruby -v                                   # Print out ruby version for debugging
  # Uncomment next line if your rails app needs a JS runtime:
  # I changed the Docker image to one including Node!
  - gem install bundler  --no-ri --no-rdoc    # Bundler is not installed with the image
  - bundle install -j $(nproc) --path vendor  # Install dependencies into ./vendor/ruby
  - bundle exec rails db:migrate # make a bet I'll need to add the database url somewhere
  - bundle exec rails db:seed

# Optional - Delete if not using `rubocop`
# Wow. This is terrible. Doesn't do *any* result browsing, approval, or failure threshold
# rubocop:
#   variables:
#     DATABASE_URL: "postgresql://postgres:postgres@postgres:5432/$POSTGRES_DB"
#   script:
#   - bundle exec rubocop

rspec:
  variables:
    DATABASE_URL: "postgresql://postgres:postgres@postgres:5432/$POSTGRES_DB"
  script:
  - bundle exec rspec spec

# rails:
#   variables:
#     DATABASE_URL: "postgresql://postgres:postgres@postgres:5432/$POSTGRES_DB"
#   script:

# This deploy job uses a simple deploy flow to Heroku, other providers, e.g. AWS Elastic Beanstalk
# are supported too: https://github.com/travis-ci/dpl
deploy:
  type: deploy
  environment: production
  script:
  - gem install dpl
  - dpl --provider=heroku --app=$HEROKU_APP_NAME --api-key=$HEROKU_PRODUCTION_KEY
  only:
  - master

