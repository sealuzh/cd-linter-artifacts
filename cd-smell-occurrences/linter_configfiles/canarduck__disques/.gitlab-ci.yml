stages:
  - check
  - test
  - security
  - deploy

post_commit:
  stage: check
  image: registry.gitlab.com/canarduck/disques
  except:
    - schedules
  script:
    - black -q app && mypy app && pylint app

pytest:
  stage: test
  image: registry.gitlab.com/canarduck/disques
  services:
    - postgres:latest
  except:
    - schedules
  before_script:
    - python -V
    - locale
    - pip list
  script:
    - pytest
  artifacts:
    when: always
    untracked: true
    expire_in: 1 week
    reports:
      junit: report.xml

# security:
#   stage: security
#   image: python:3
#   script:
#     - pip install safety
#     - safety check -r requirements/requirements.txt -r requirements/requirements-dev.txt

dependency_scanning:
  stage: security
  image: docker:stable
  variables:
    DOCKER_DRIVER: overlay2
  #allow_failure: true
  only:
    - schedules
  services:
    - docker:stable-dind
  script:
    - export SP_VERSION=$(echo "$CI_SERVER_VERSION" | sed 's/^\([0-9]*\)\.\([0-9]*\).*/\1-\2-stable/')
    - docker run
      --env DEP_SCAN_DISABLE_REMOTE_CHECKS="${DEP_SCAN_DISABLE_REMOTE_CHECKS:-false}"
      --volume "$PWD:/code"
      --volume /var/run/docker.sock:/var/run/docker.sock
      "registry.gitlab.com/gitlab-org/security-products/dependency-scanning:$SP_VERSION" /code
  artifacts:
    reports:
      dependency_scanning: gl-dependency-scanning-report.json

pages:
  stage: deploy
  image: alpine
  allow_failure: true
  except:
    - schedules
  script:
    - mv htmlcov public
  artifacts:
    paths:
      - public

.deploy:
  stage: deploy
  image: alpine
  except:
    - schedules
  variables:
    URL: $CI_ENVIRONMENT_URL
  before_script:
    - apk add --no-cache curl
  script:
    - echo "Déploiement de ${REF} sur ${URL} grâce au hook"
    - curl --fail --data "secret=${SECRET}&reference=${REF}" --referer https://gitlab.com ${URL}/_deploy
  when: on_success

deploy_staging:
  extends: .deploy
  variables:
    SECRET: $DEPLOY_STAGING_SECRET
    REF: $CI_COMMIT_SHA
  environment:
    name: staging
    url: https://staging.disqu.es

deploy_prod:
  extends: .deploy
  variables:
    SECRET: $DEPLOY_PROD_SECRET
    REF: $CI_COMMIT_TAG
  environment:
    name: prod
    url: https://disqu.es
  only:
    - tags

