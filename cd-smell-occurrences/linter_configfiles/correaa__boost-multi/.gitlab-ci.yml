# This file is a template, and might need editing before it works on your project.
#image: golang:latest

#variables:
#  # Please edit to your GitLab project
#  REPO_NAME: gitlab.com/namespace/project

# The problem is that to be able to use go get, one needs to put
# the repository in the $GOPATH. So for example if your gitlab domain
# is gitlab.com, and that your repository is namespace/project, and
# the default GOPATH being /go, then you'd need to have your
# repository in /go/src/gitlab.com/namespace/project
# Thus, making a symbolic link corrects this.
#before_script:
#  - mkdir -p $GOPATH/src/$(dirname $REPO_NAME)
#  - ln -svf $CI_PROJECT_DIR $GOPATH/src/$REPO_NAME
#  - cd $GOPATH/src/$REPO_NAME

image: debian:unstable

variables:
  CXX: "c++"

before_script:
    - apt update --quiet
    - apt upgrade -y --quiet
    - apt install --assume-yes --quiet g++ libboost-test-dev valgrind

stages:
    - test
#    - build

Test:
    stage: test
    script:
      - ln --symbolic --force . ../multi
      - $CXX --version
      - cd tests
      - sh ./array_ptr.cpp
      - sh ./array_ref.cpp
      - sh ./sort.cpp
      - sh ./comparisons.cpp
      - sh ./constructors.cpp
      - sh ./initializer_list.cpp
      - sh ./layout.cpp
      - sh ./fill.cpp
      - sh ./rotated.cpp
      - sh ./allocator.cpp
      - sh ./reextent.cpp



