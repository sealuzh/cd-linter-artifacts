image: registry.gitlab.com/nobodyinperson/simbuto/ubuntu_16.04

variables:
    DEBIAN_PACKAGE_DIR: debian-package
    AUTOCONF_INSTALL_DIR: install-dir

stages:
    - build
    - build-test
    - install-test
    - app-test
    - deploy
    - deploy-test

before_script:
    - apt-get -qq update
    - apt-get -qq -y install at r-base-core udev pkg-config python3-dbus

# cache everything that is untracked by default for this branch
cache:
    key: "$CI_JOB_NAME/$CI_COMMIT_REF_NAME"
    untracked: true

autoconf-build:
    stage: build
    script: 
        - ./configure
        - make # build
    dependencies: [] # no artifacts needed

debian-package-build:
    stage: build
    script:
        - apt-get -qq -y install dh-systemd
        - dpkg-buildpackage -us -uc # build package
        - mkdir -p $DEBIAN_PACKAGE_DIR # create folder for debian package
        - cp ../*.deb ../*.dsc ../*.changes $DEBIAN_PACKAGE_DIR # copy .deb-file into build directory
    artifacts:
        name: "${CI_JOB_STAGE}_${CI_COMMIT_REF_NAME}"
        paths:
            - $DEBIAN_PACKAGE_DIR/*

autoconf-clean-test:
    stage: build-test
    script:
        - git clean -fdx
        - tests/autoconf/build-clean-test.sh
    dependencies: [] # no artifacts needed

debian-package-test:
    stage: build-test
    script:
        - dpkg-deb -I $DEBIAN_PACKAGE_DIR/*.deb
        - dpkg -c $DEBIAN_PACKAGE_DIR/*.deb
        - lintian $DEBIAN_PACKAGE_DIR/*.deb # check package
    dependencies:
        - debian-package-build

autoconf-install-uninstall:
    stage: install-test
    script:
        - ./configure --prefix=$(pwd)/$AUTOCONF_INSTALL_DIR
        - make # just make sure everything is built
        - make install # install it
        - find $AUTOCONF_INSTALL_DIR -type f
        - test -n "$(find $AUTOCONF_INSTALL_DIR -type f)"
        - make uninstall
        - find $AUTOCONF_INSTALL_DIR -type f
        - test -z "$(find $AUTOCONF_INSTALL_DIR -type f)"
    dependencies: [] # no artifacts needed

debian-package-install-uninstall:
    stage: install-test
    script:
        - dpkg -i $DEBIAN_PACKAGE_DIR/*.deb # install it
        - dpkg -r $(dpkg -I $DEBIAN_PACKAGE_DIR/*.deb | perl -ne 'if(s/^\s*package:\s*(\w+)$/$1/ig){print;exit}')
    dependencies:
        - debian-package-build

apt-deploy:
    variables:
        GIT_STRATEGY: none # no repo cloning necessary
    stage: deploy
    environment:
        name: production
        url: http://apt.nobodyinperson.de
    script:
        - eval $(ssh-agent -s) # start ssh agent
        - ssh-add <(echo "$SSH_DEPLOY_PRIVATE_KEY") # add private key
        - mkdir -p ~/.ssh
        - echo "$SSH_DEPLOY_HOSTKEYS" >> ~/.ssh/known_hosts # add host keys
        - scp -qP "$SSH_DEPLOY_PORT" "$DEBIAN_PACKAGE_DIR"/*.deb "$SSH_DEPLOY_ADDRESS" # deploy package
    dependencies:
        - debian-package-build
    only:
        - master
    only:
        - tags

apt-install-test:
    variables:
        GIT_STRATEGY: none # no repo cloning necessary
    stage: deploy-test
    script:
        - 'apt-get update -qq'
        - 'apt-get install -qq wget'
        - 'set -e'
        - 'export DEBFILE=($DEBIAN_PACKAGE_DIR/*.deb)'
        - 'echo "debian package file: $DEBFILE"'
        - 'export PACKAGE_NAME=$(dpkg -I $DEBFILE | perl -ne ''if(s/^\s*package:\s*(\S+)\s*$/$1/ig){print;exit}'')'
        - 'export PACKAGE_VERSION=$(dpkg -I $DEBFILE | perl -ne ''if(s/^\s*version:\s*(\S+)\s*$/$1/ig){print;exit}'')'
        - 'echo "built package version: $PACKAGE_VERSION"'
        - 'wget -qO- http://apt.nobodyinperson.de/gpg.key | apt-key add -'
        - 'echo "deb http://apt.nobodyinperson.de unstable main" | tee /etc/apt/sources.list.d/nobodyinperson.list'
        - 'apt-get update -qq'
        - 'apt-get download -y -qq $PACKAGE_NAME'
        - 'export APT_PACKAGE_VERSION=$(dpkg -I $PACKAGE_NAME*.deb | perl -ne ''if(s/^\s*version:\s*(\S+)\s*$/$1/ig){print;exit}'')'
        - 'echo "apt package version: $APT_PACKAGE_VERSION"'
        - 'test "$PACKAGE_VERSION" = "$APT_PACKAGE_VERSION"'
        - 'apt-get install -y -qq $PACKAGE_NAME'
    dependencies:
        - debian-package-build
    only:
        - master
    only:
        - tags

