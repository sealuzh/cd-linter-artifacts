# Base image: really weightless
image: python:3.7

stages:
  - test
  - deploy
  - publish

test:
  stage: test
  script:
  # this configures Django application to use attached postgres database that is run on `postgres` host
  - export DATABASE_URL=postgres://postgres:@postgres:5432/python-test-app
  - apt-get update -qy
  - apt-get install -y python-dev python-pip
  - pip install -r requirements.txt && pip install -r requirements-dev.txt
  - coverage run --branch --source=. ./manage.py test
  - coverage html
  - coverage report
  coverage: '/TOTAL.+ ([0-9]{1,3}%)/'
  artifacts:
    paths:
      - htmlcov/
    expire_in: 1 hour

production:
  stage: deploy
  script:
    - apt-get update -qy
    - apt-get install -y ruby-dev
    - gem install dpl
    - python setup.py sdist
    - dpl --provider=pypi --user=$PIP_USERNAME --password=$PIP_PASSWORD --skip_existing=true
  only:
  - master

pages:
  image: node:latest
  stage: publish
  cache:
    paths:
    - node_modules/
  script:
    - npm install -g vuepress
    - cd docs && vuepress build
  artifacts:
    paths:
      - public
  only:
    - master

