<!--
 Copyright (C) 2016-2020 Linagora

 This program is free software: you can redistribute it and/or modify
 it under the terms of the GNU Affero General Public License as
 published by the Free Software Foundation, either version 3 of the
 License, or (at your option) any later version.

 This program is distributed in the hope that it will be useful,
 but WITHOUT ANY WARRANTY; without even the implied warranty of
 MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 GNU Affero General Public License for more details.

 You should have received a copy of the GNU Affero General Public License
 along with this program.  If not, see http://www.gnu.org/licenses/.
-->
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <parent>
    <groupId>org.ow2.petals</groupId>
    <artifactId>petals-cockpit-parent</artifactId>
    <version>1.5.0-SNAPSHOT</version>
  </parent>

  <artifactId>petals-cockpit-server</artifactId>
  <packaging>jar</packaging>

  <properties>
    <cockpit.exec.command>server</cockpit.exec.command>
    <cockpit.exec.config>default.yml</cockpit.exec.config>
    <codegen.db.url>jdbc:h2:file:${project.build.directory}/db</codegen.db.url>
    <!-- To be used with https://github.com/lastnpe/eclipse-external-annotations-m2e-plugin -->
    <m2e.jdt.annotationpath>src/main/external-annotations/</m2e.jdt.annotationpath>
  </properties>

  <dependencies>
    <dependency>
      <groupId>io.dropwizard</groupId>
      <artifactId>dropwizard-core</artifactId>
    </dependency>
    <dependency>
      <groupId>io.dropwizard</groupId>
      <artifactId>dropwizard-migrations</artifactId>
    </dependency>
    <dependency>
      <groupId>io.dropwizard</groupId>
      <artifactId>dropwizard-forms</artifactId>
    </dependency>
    <dependency>
      <groupId>io.dropwizard-bundles</groupId>
      <artifactId>dropwizard-configurable-assets-bundle</artifactId>
      <version>1.0.5</version>
    </dependency>
    <dependency>
      <groupId>com.bendb.dropwizard</groupId>
      <artifactId>dropwizard-jooq</artifactId>
      <version>1.1.0-0</version>
    </dependency>
    <dependency>
      <groupId>org.glassfish.jersey.media</groupId>
      <artifactId>jersey-media-sse</artifactId>
    </dependency>
    <dependency>
      <groupId>org.pac4j</groupId>
      <artifactId>dropwizard-pac4j</artifactId>
      <version>3.0.0</version>
        <!-- this brings javax.inject:javax.inject:1
             dropwizard 1.3.8 brings org.glassfish.hk2.external:javax.inject:jar:2.5.0-b32 -->
    <exclusions>
        <exclusion>
          <groupId>javax.inject</groupId>
          <artifactId>javax.inject</artifactId>
        </exclusion>
      </exclusions>
    </dependency>
    <dependency>
      <groupId>org.pac4j</groupId>
      <artifactId>pac4j-ldap</artifactId>
      <version>${pac4j.version}</version>
    </dependency>
    <dependency>
      <groupId>io.javaslang</groupId>
      <artifactId>javaslang</artifactId>
    </dependency>
    <dependency>
      <!-- Needed for pac4j's password encoder -->
      <groupId>org.springframework.security</groupId>
      <artifactId>spring-security-crypto</artifactId>
      <version>4.2.3.RELEASE</version>
    </dependency>
    <!-- Database dependencies -->
    <dependency>
      <groupId>com.h2database</groupId>
      <artifactId>h2</artifactId>
      <scope>runtime</scope>
    </dependency>
    <!-- Petals dependencies -->
    <dependency>
      <groupId>org.ow2.petals</groupId>
      <artifactId>petals-admin-api</artifactId>
    </dependency>
    <!-- Test dependencies -->
    <dependency>
      <groupId>org.mockito</groupId>
      <artifactId>mockito-core</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>io.dropwizard</groupId>
      <artifactId>dropwizard-testing</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.ow2.petals</groupId>
      <artifactId>petals-admin-mock</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.glassfish.jersey.test-framework.providers</groupId>
      <artifactId>jersey-test-framework-provider-grizzly2</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>com.github.stefanbirkner</groupId>
      <artifactId>system-rules</artifactId>
      <version>1.16.1</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.zapodot</groupId>
      <artifactId>embedded-db-junit</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.zapodot</groupId>
      <artifactId>embedded-db-junit-liquibase</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.assertj</groupId>
      <artifactId>assertj-db</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.pac4j</groupId>
      <!-- Required for its test utils -->
      <artifactId>pac4j-ldap</artifactId>
      <version>${pac4j.version}</version>
      <type>test-jar</type>
      <scope>test</scope>
    </dependency>
    <dependency>
    <!-- Required by pac4j-ldap test utils -->
      <groupId>org.pac4j</groupId>
      <artifactId>pac4j-core</artifactId>
      <version>${pac4j.version}</version>
      <type>test-jar</type>
      <scope>test</scope>
    </dependency>
    <dependency>
    <!-- Required by pac4j-ldap test utils -->
      <groupId>com.unboundid</groupId>
      <artifactId>unboundid-ldapsdk</artifactId>
      <version>3.2.1</version>
      <scope>test</scope>
    </dependency>
    <!-- Code quality dependencies -->
    <dependency>
      <groupId>org.eclipse.jdt</groupId>
      <artifactId>org.eclipse.jdt.annotation</artifactId>
    </dependency>
    <dependency>
      <groupId>com.webcohesion.enunciate</groupId>
      <artifactId>enunciate-core-annotations</artifactId>
    </dependency>
    <!-- Runtime dependencies -->
    <dependency>
      <groupId>org.ow2.petals</groupId>
      <artifactId>petals-admin-jmx</artifactId>
      <scope>runtime</scope>
    </dependency>
    <dependency>
      <groupId>org.ow2.petals</groupId>
      <artifactId>petals-jmx-api-impl</artifactId>
      <scope>runtime</scope>
    </dependency>
  </dependencies>

  <build>
    <plugins>
      <plugin>
        <groupId>org.liquibase</groupId>
        <artifactId>liquibase-maven-plugin</artifactId>
        <version>${liquibase.version}</version>
        <executions>
          <execution>
            <!-- this will be executed just before jooq codegen -->
            <phase>generate-sources</phase>
            <goals>
              <goal>update</goal>
            </goals>
          </execution>
        </executions>
        <dependencies>
          <dependency>
            <groupId>com.h2database</groupId>
            <artifactId>h2</artifactId>
            <version>${h2.version}</version>
          </dependency>
        </dependencies>
        <configuration>
          <changeLogFile>${basedir}/src/main/resources/migrations.xml</changeLogFile>
          <driver>org.h2.Driver</driver>
          <url>${codegen.db.url}</url>
          <username>u</username>
          <password></password>
          <dropFirst>true</dropFirst>
        </configuration>
      </plugin>
      <plugin>
        <groupId>org.jooq</groupId>
        <artifactId>jooq-codegen-maven</artifactId>
        <version>${jooq.version}</version>
        <executions>
          <execution>
            <goals>
              <goal>generate</goal>
            </goals>
          </execution>
        </executions>
        <dependencies>
          <dependency>
            <groupId>com.h2database</groupId>
            <artifactId>h2</artifactId>
            <version>${h2.version}</version>
          </dependency>
        </dependencies>

        <configuration>
          <jdbc>
            <driver>org.h2.Driver</driver>
            <url>${codegen.db.url}</url>
            <user>u</user>
            <password></password>
          </jdbc>
          <generator>
            <name>org.jooq.util.JavaGenerator</name>
            <generate>
               <!-- see section 6.2 of docs for additional options -->
              <deprecated>false</deprecated>
            </generate>
            <database>
              <name>org.jooq.util.h2.H2Database</name>
              <includes>.*</includes>
              <inputSchema>PUBLIC</inputSchema>
            </database>
            <target>
              <packageName>org.ow2.petals.cockpit.server.db.generated</packageName>
              <directory>target/generated-sources/jooq</directory>
            </target>
          </generator>
        </configuration>
      </plugin>
      <plugin>
        <!-- Let's activate jacoco for unit test coverage -->
        <groupId>org.jacoco</groupId>
        <artifactId>jacoco-maven-plugin</artifactId>
        <configuration>
          <excludes>
            <exclude>org/ow2/petals/cockpit/server/db/generated/**/*</exclude>
          </excludes>
        </configuration>
      </plugin>
      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>exec-maven-plugin</artifactId>
        <executions>
          <execution>
            <!-- Run with (for example): mvn compile exec:java@cli -Dexec.args="db migrate backend/default.yml" -->
            <id>cli</id>
            <goals>
              <goal>java</goal>
            </goals>
            <configuration>
              <mainClass>org.ow2.petals.cockpit.server.CockpitApplication</mainClass>
            </configuration>
          </execution>
          <execution>
            <!-- Run with: mvn compile exec:exec@server-->
            <id>server</id>
            <goals>
              <goal>exec</goal>
            </goals>
            <configuration>
              <executable>${java.home}/bin/java</executable>
              <arguments>
                <argument>-ea</argument>

                <!-- Classpath -->
                <argument>-classpath</argument>
                <classpath />

                <!-- Main class -->
                <argument>org.ow2.petals.cockpit.server.CockpitApplication</argument>

                <!-- Command -->
                <argument>${cockpit.exec.command}</argument>
                <argument>${cockpit.exec.config}</argument>
              </arguments>
            </configuration>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>com.webcohesion.enunciate</groupId>
        <artifactId>enunciate-slim-maven-plugin</artifactId>
        <version>${enunciate.version}</version>
        <dependencies>
          <dependency>
            <groupId>com.webcohesion.enunciate</groupId>
            <artifactId>enunciate-jaxrs</artifactId>
            <version>${enunciate.version}</version>
          </dependency>
          <dependency>
            <groupId>com.webcohesion.enunciate</groupId>
            <artifactId>enunciate-jackson</artifactId>
            <version>${enunciate.version}</version>
          </dependency>
          <dependency>
            <groupId>com.webcohesion.enunciate</groupId>
            <artifactId>enunciate-docs</artifactId>
            <version>${enunciate.version}</version>
          </dependency>
          <dependency>
            <!--This dependency is a workaround, see https://github.com/stoicflame/enunciate/issues/763 -->
            <groupId>javax.annotation</groupId>
            <artifactId>javax.annotation-api</artifactId>
            <version>1.3</version>
          </dependency>
        </dependencies>
      </plugin>
      <!-- Test are passed in alphabetical order as a workaround so LDAP tests run last. They were impacting other tests in a way I could not prevent ... -->
      <!-- See: https://groups.google.com/forum/#!topic/dropwizard-user/hb79pf_gXjg -->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-surefire-plugin</artifactId>
        <version>3.0.0-M1</version>
        <configuration>
          <runOrder>alphabetical</runOrder>
        </configuration>
      </plugin>
    </plugins>
    <pluginManagement>
      <plugins>
        <!--This plugin's configuration is used to store Eclipse m2e settings only. It has no influence on the Maven build itself.-->
        <plugin>
          <groupId>org.eclipse.m2e</groupId>
          <artifactId>lifecycle-mapping</artifactId>
          <version>1.0.0</version>
          <configuration>
            <lifecycleMappingMetadata>
              <pluginExecutions>
                <pluginExecution>
                  <pluginExecutionFilter>
                    <groupId>org.jooq</groupId>
                    <artifactId>jooq-codegen-maven</artifactId>
                    <versionRange>[3.8.4,)</versionRange>
                    <goals>
                      <goal>generate</goal>
                    </goals>
                  </pluginExecutionFilter>
                  <action>
                    <execute>
                      <runOnIncremental>false</runOnIncremental>
                      <runOnConfiguration>true</runOnConfiguration>
                    </execute>
                  </action>
                </pluginExecution>
                <pluginExecution>
                  <pluginExecutionFilter>
                    <groupId>org.liquibase</groupId>
                    <artifactId>liquibase-maven-plugin</artifactId>
                    <versionRange>[3.5.1,)</versionRange>
                    <goals>
                      <goal>update</goal>
                    </goals>
                  </pluginExecutionFilter>
                  <action>
                    <execute>
                      <runOnIncremental>false</runOnIncremental>
                      <runOnConfiguration>true</runOnConfiguration>
                    </execute>
                  </action>
                </pluginExecution>
              </pluginExecutions>
            </lifecycleMappingMetadata>
          </configuration>
        </plugin>
      </plugins>
    </pluginManagement>
  </build>
</project>

