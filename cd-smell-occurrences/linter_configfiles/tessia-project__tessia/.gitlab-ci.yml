image: docker:latest
services:
  - docker:dind

variables:
  CLI_IMAGE_NAME: tessia-cli:${CI_COMMIT_REF_SLUG}
  SERVER_IMAGE_NAME: tessia-server:${CI_COMMIT_REF_SLUG}
  REGISTRY_CLI_IMAGE_NAME: ${CI_REGISTRY_IMAGE}/tessia-cli:${CI_COMMIT_REF_SLUG}
  REGISTRY_SERVER_IMAGE_NAME: ${CI_REGISTRY_IMAGE}/tessia-server:${CI_COMMIT_REF_SLUG}

stages:
  - build
  - tests
  - release

before_script:
  - docker login -u gitlab-ci-token -p $CI_JOB_TOKEN $CI_REGISTRY
  - apk add --no-cache bash build-base git libffi-dev openssl-dev python3 python3-dev
  - pip3 install -U pip -rtools/ci/requirements.txt

build_cli:
  stage: build
  script:
    - tools/ci/orc build --tag=$CI_COMMIT_REF_SLUG --image=tessia-cli
    - docker tag $CLI_IMAGE_NAME $REGISTRY_CLI_IMAGE_NAME
    - docker push $REGISTRY_CLI_IMAGE_NAME

build_server:
  stage: build
  script:
    - tools/ci/orc build --tag=$CI_COMMIT_REF_SLUG --image=tessia-server
    - docker tag $SERVER_IMAGE_NAME $REGISTRY_SERVER_IMAGE_NAME
    - docker push $REGISTRY_SERVER_IMAGE_NAME

unittests_server:
  coverage: '/^TOTAL.*\s+(\d+\%)$/'
  stage: tests
  script:
    - pip3 install docker-compose
    - docker pull $REGISTRY_SERVER_IMAGE_NAME
    - docker tag $REGISTRY_SERVER_IMAGE_NAME $SERVER_IMAGE_NAME
    - docker pull $REGISTRY_CLI_IMAGE_NAME
    - docker tag $REGISTRY_CLI_IMAGE_NAME $CLI_IMAGE_NAME
    - tools/ci/orc unittest --tag=$CI_COMMIT_REF_SLUG

clitests:
  stage: tests
  script:
    - pip3 install docker-compose
    - docker pull $REGISTRY_SERVER_IMAGE_NAME
    - docker tag $REGISTRY_SERVER_IMAGE_NAME $SERVER_IMAGE_NAME
    - docker pull $REGISTRY_CLI_IMAGE_NAME
    - docker tag $REGISTRY_CLI_IMAGE_NAME $CLI_IMAGE_NAME
    - tools/ci/orc clitest --tag=$CI_COMMIT_REF_SLUG

release:
  stage: release
  script:
    - export TESSIA_IMAGE_TAG=`python3 -c 'from setup import gen_version; print(gen_version().replace("+", "-commit"))'`
    - docker pull $REGISTRY_CLI_IMAGE_NAME
    - docker pull $REGISTRY_SERVER_IMAGE_NAME
    - docker tag $REGISTRY_CLI_IMAGE_NAME ${CI_REGISTRY_IMAGE}/tessia-cli:${TESSIA_IMAGE_TAG}
    - docker tag $REGISTRY_SERVER_IMAGE_NAME ${CI_REGISTRY_IMAGE}/tessia-server:${TESSIA_IMAGE_TAG}
    - docker push ${CI_REGISTRY_IMAGE}/tessia-cli:${TESSIA_IMAGE_TAG}
    - docker push ${CI_REGISTRY_IMAGE}/tessia-server:${TESSIA_IMAGE_TAG}
  only:
    - master
    - tags

