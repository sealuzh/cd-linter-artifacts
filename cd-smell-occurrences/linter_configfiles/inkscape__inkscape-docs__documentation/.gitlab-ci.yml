# we use a custom docker image for faster CI builds,
# see https://gitlab.com/inkscape/inkscape-ci-docker/tree/documentation
image: registry.gitlab.com/inkscape/inkscape-ci-docker/documentation

variables:
  GIT_DEPTH: "10"
  INKBRANCH: "master"
  INKVERSION: "-master"


stages:
  - build
  - deploy


.default: &default
  stage: build
  script:
    - cd $target_dir
    - make all --always-make -j$(nproc)
    - make copy
  artifacts:
    name: "$target_dir"
    paths:
      - export-website/
      - export-inkscape/


man:
  <<: *default
  variables:
    target_dir: man

keys:
  <<: *default
  variables:
    target_dir: keys

tutorials:
  <<: *default
  variables:
    target_dir: tutorials

statistics:
  <<: *default
  variables:
    target_dir: statistics
  before_script:
    # make sure all po files are up-to-date to produce reliable statistics
    - make po --always-make -j$(nproc)
  allow_failure: true


deploy:
  stage: deploy
  variables:
    GIT_DEPTH: ""
  script:
    # create contributor statistics
    - mkdir -p export-website/data
    - 'git log --all --format="------------------%n%nAUTHOR:%aN%nTIME:%at%nEMAIL:%aE%n%h : %s%n%aD%n" > export-website/data/documentation.log'

    # update documentation export repository
    - 'if [ -z "${CI_TOKEN}" ]; then
        echo "\${CI_TOKEN} not set, skipping update of export repository...";
        exit 0;
      fi'
    #  config
    - 'if [ -z "${CI_BUILD_BEFORE_SHA}" ] || 
          [ "${CI_BUILD_BEFORE_SHA}" == 0 ] ||
          [ "${CI_BUILD_BEFORE_SHA}" == "$(git rev-parse ${CI_COMMIT_SHA}^)" ] ||
          ! git rev-list ${CI_BUILD_BEFORE_SHA}...${CI_COMMIT_SHA}; then
        COMMIT_MESSAGE=$(git log -1 --pretty=format:"  %s%n  authored by %an on %aD");
        COMMIT_MESSAGE_LINK="see ${CI_PROJECT_URL}/commit/${CI_COMMIT_SHA}";
      else
        COMMIT_MESSAGE=$(git log ${CI_BUILD_BEFORE_SHA}..${CI_COMMIT_SHA} --pretty=format:"  %s%n  authored by %an on %aD%n");
        COMMIT_MESSAGE_LINK="see ${CI_PROJECT_URL}/compare/${CI_BUILD_BEFORE_SHA}...${CI_COMMIT_SHA}";
      fi'
    - git config --global user.name "Inkscape CI"
    - git config --global user.email "inkscape.dev@outlook.com"
    #  clone the repo
    - git clone --depth 1 https://gitlab.com/${CI_PROJECT_PATH}-export.git documentation-export
    #  add and commit the new files
    - cp -r export-website/* documentation-export
    - cd documentation-export
    - git add --all
    - 'if [ "${CI_COMMIT_REF_NAME}" != "master" ]; then
        echo "\${CI_COMMIT_REF_NAME} is not master, skipping update of tutorials...";
        git reset tutorials;
      fi'
    - git commit -m "Automatic update from CI" -m "${COMMIT_MESSAGE}" -m "${COMMIT_MESSAGE_LINK}"
    #  push to repo (use git credential storage to avoid leaking the access token in logs if anything goes wrong)
    - CI_USER=inkscape_ci
    - git config --global credential.helper cache
    - echo -e "protocol=https\nhost=gitlab.com\npath=${CI_PROJECT_PATH}-export.git\nusername=${CI_USER}\npassword=${CI_TOKEN}\n\n" | git credential-cache store
    - git push origin
    - git credential-cache exit

  artifacts:
    name: "documentation"
    paths:
      - export-website/
      - export-inkscape/

