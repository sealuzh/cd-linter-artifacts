
stages:
  - build
  - pre-release
  - release
  - deploy

build:
  image: node:10
  stage: build
  tags: [docker]
  except: [master,tags]
  script:
    - npm ci
    - npm run lint
    - npm run webpack


pages:
  image: node:10
  stage: deploy
  tags: [docker]
  only: [tags]
  script:
    - sed -i package.json -e "s#0\.0\.0-tag#$CI_COMMIT_TAG#g"
    - npm ci
    - npm run public
  dependencies: []
  artifacts:
    paths:
    - public/


release:
  image: node:10
  stage: release
  tags: [docker]
  only: [master]
  except: [tags]
  script:
    - npx semantic-release-gitlab


.build_job_template: &build_job_definition
  stage: release
  tags: [docker]
  only: [tags]
  before_script:
  - sed -i package.json -e "s#0\.0\.0-tag#$CI_COMMIT_TAG#g"
  - npm ci
  - npm run webpack


package-linux-targz:
  image: electronuserland/builder
  <<: *build_job_definition
  script:
    - npm run package-linux-targz
    - mv dist/*.tar.gz .
  artifacts:
    name: "${CI_PROJECT_NAME}_${CI_COMMIT_TAG}"
    paths:
    - "*.tar.gz"


package-linux-snap-test:
  stage: build
  image: electronuserland/builder
  tags: [docker]
  except: [tags, master]
  script:
    - npm ci
    - npm run webpack
    - npm run package-linux-snap


package-linux-snap:
  image: electronuserland/builder
  <<: *build_job_definition
  script:
    - npm run package-linux-snap
    - mv dist/*.snap .
  artifacts:
    name: "${CI_PROJECT_NAME}_${CI_COMMIT_TAG}"
    paths:
    - "*.snap"


package-win-zip:
  image: electronuserland/builder:wine
  <<: *build_job_definition
  script:
    - npm run package-win-zip
    - mv dist/*.zip .
  artifacts:
    name: "${CI_PROJECT_NAME}_${CI_COMMIT_TAG}"
    paths:
    - "*.zip"


package-win-nsis:
  image: electronuserland/builder:wine
  <<: *build_job_definition
  script:
    - npm run package-win-nsis
    - mv dist/*.exe .
  artifacts:
    name: "${CI_PROJECT_NAME}_${CI_COMMIT_TAG}"
    paths:
    - "*.exe"


package-mac-targz:
  image: electronuserland/builder
  <<: *build_job_definition
  script:
    - npm run package-mac-targz
    - mv dist/*.tar.gz .
  artifacts:
    name: "${CI_PROJECT_NAME}_${CI_COMMIT_TAG}"
    paths:
    - "*.tar.gz"


publish-linux-snap:
  image: snapcore/snapcraft:stable
  stage: deploy
  tags: [docker]
  only: [tags]
  dependencies: [package-linux-snap]
  script:
    - ls -a
    - echo "$SNAPCRAFT_LOGIN_FILE"
    - snapcraft login --with "$SNAPCRAFT_LOGIN_FILE"
    - snapcraft push *.snap --release beta

