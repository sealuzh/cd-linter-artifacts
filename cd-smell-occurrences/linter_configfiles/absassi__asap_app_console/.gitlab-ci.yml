stages:
  - build

variables:
  GIT_SUBMODULE_STRATEGY: recursive
  BUILD_TYPE: Release

.build_template: &build_definition
  stage: build
  script:
    #
    # Build Folder
    #
    - mkdir _build
    - cd _build

    #
    # Update / Install CMake
    #
    - |
      if [[ `uname` == "Linux" ]]; then
        mkdir -p external/cmake
        pushd external/cmake
        wget https://cmake.org/files/v3.11/cmake-3.11.0-Linux-x86_64.sh
        chmod +x cmake-*-Linux-x86_64.sh
        ./cmake-*-Linux-x86_64.sh --exclude-subdir --skip-license
        export PATH="${PWD}/bin:$PATH"
        popd
      else
        brew update
        brew outdated cmake || brew upgrade cmake
      fi

    #
    # Run the build
    #
    - cmake -DCMAKE_BUILD_TYPE=$BUILD_TYPE -DBUILD_SHARED_LIBS=ON -DOPTION_SELF_CONTAINED=ON -DCMAKE_INSTALL_PREFIX=./asap-install ..
    - make -j 2
    - make install
    - ctest -C $BUILD_TYPE --output-on-failure

build:ubuntu:trusty:gcc-6:
  <<: *build_definition
  image: ubuntu:trusty
  before_script:
    - apt-get update -qq
    - apt-get install -y -qq software-properties-common python-software-properties
    - add-apt-repository ppa:ubuntu-toolchain-r/test
    - apt-get update -qq
    - apt-get install -y -qq wget git build-essential gcc-6 g++-6
  variables:
    CC: gcc-6
    CXX: g++-6

