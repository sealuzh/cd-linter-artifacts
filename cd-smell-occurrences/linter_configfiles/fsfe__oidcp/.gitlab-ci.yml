stages:
  - quality
  - test
  - build
  - deploy

variables:
  IMAGE_TAG: "$CI_REGISTRY_IMAGE:master"
  AMS_DOCKER_COMPOSE_URL: "https://gitlab.com/api/v4/projects/3362561/trigger/pipeline"

pep8-checks:
  stage: quality
  image: $IMAGE_TAG
  before_script:
    - pipenv install --dev
  script:
    - make lint

import-sorts:
  stage: quality
  image: $IMAGE_TAG
  before_script:
    - pipenv install --dev
  script:
    - make isort

unit-test:
  stage: test
  image: $IMAGE_TAG
  before_script:
    - pipenv install --dev
  script:
    - make coverage
  variables:
    BACKEND_ID: "backend_id"
    BACKEND_SECRET: "backend_secret"
    FRONTEND_ID: "frontend_id"
    FRONTEND_URL: "https://TODO.org"
    SHARED_JWT_SECRET: "shared_jwt_secret"
    FRONTEND_SALT: "frontend_salt"
    LDAP_URL: "ldap://localhost/"
    LDAP_UNAME_PATTERN: "uid={},ou=fellowship,dc=fsfe,dc=org"
    LDAP_EMAIL_PATTERN: "ou=fellowship,dc=fsfe,dc=org"
    TOKEN_ALGORITHM: "HS256"
    SWAGGER_UI: "3"
    TOKEN_TYPE: "Bearer"
    FSFE_CD_URL: "https://TODO.org"
    BACKCHANNEL_ID: "backchannel_id"
    BACKCHANNEL_PWORD: "backchannel_secret"
    BACKCHANNEL_TIMEOUT: "3"
    CELERY_BROKER_URL: "redis://localhost:6379/1"
    CELERY_RESULT_BACKEND: "redis://localhost:6379/1"
    CODE_TIMEOUT: "1800"
    MAIL_DEFAULT_SENDER: "TODO@fsfe.org"
    MAIL_SERVER: "mail.todo.org"
    REDIS_HOST: "localhost"
    REDIS_PORT: "6379"
    REDIS_SESSION_DB: "0"
    OPBEAT_ORGANIZATION_ID: 'aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa'
    OPBEAT_APP_ID: 'aaaaaaaaaa'
    OPBEAT_SECRET_TOKEN: 'aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa'
    SERVER_PORT: "0.0.0.0:8000"

docker-build:
  stage: build
  image: docker:latest
  services:
    - docker:dind
  script:
    - docker build -t $IMAGE_TAG .
    - mkdir -p image
    - docker save $IMAGE_TAG > image/image.tar
  artifacts:
    paths:
      - image

docker-push:
  stage: deploy
  image: docker:latest
  services:
    - docker:dind
  before_script:
    - apk add --no-cache curl
  script:
    - docker login -u gitlab-ci-token -p $CI_JOB_TOKEN $CI_REGISTRY
    - docker load -i image/image.tar
    - docker push $IMAGE_TAG
    - curl -X POST -F token=$AMS_DOCKER_COMPOSE_TOKEN -F ref=master $AMS_DOCKER_COMPOSE_URL
  only:
    - master

