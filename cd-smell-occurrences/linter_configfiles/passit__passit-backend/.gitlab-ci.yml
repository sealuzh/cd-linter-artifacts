image: docker:stable
services:
  - docker:19.03.5-dind

stages:
  - test
  - deploy
  - trigger

variables:
  PROJECT_NAME: passit
  COMPOSE: docker-compose -p passit
  IMAGE_NAME: registry.gitlab.com/passit/passit-backend
  CONTAINER_TEST_IMAGE: registry.gitlab.com/passit/passit-backend:$CI_BUILD_REF_NAME

before_script:
  - docker login -u gitlab-ci-token -p $CI_BUILD_TOKEN registry.gitlab.com

test:
  stage: test
  script:
    - apk add --no-cache py-pip python-dev libffi-dev openssl-dev gcc libc-dev make
    - pip install docker-compose
    - docker pull $IMAGE_NAME:latest || true # https://gitlab.com/gitlab-org/gitlab-ce/issues/17861#note_24928596
    - $COMPOSE build --pull
    - $COMPOSE up -d
    - $COMPOSE run --rm web ./manage.py test
    - docker tag ${PROJECT_NAME}_web ${IMAGE_NAME}:$CI_BUILD_REF_NAME
    - docker push $CONTAINER_TEST_IMAGE

tag_prod:
  stage: deploy
  environment: prod
  only:
    - master
  script:
    - docker pull $CONTAINER_TEST_IMAGE
    - docker tag $CONTAINER_TEST_IMAGE ${IMAGE_NAME}:latest
    - docker push ${IMAGE_NAME}:latest

tag_staging:
  stage: deploy
  environment: staging
  only:
    - staging
  script:
    - docker pull $CONTAINER_TEST_IMAGE
    - docker tag $CONTAINER_TEST_IMAGE ${IMAGE_NAME}:staging
    - docker push ${IMAGE_NAME}:staging

tag_dev:
  stage: deploy
  environment: dev
  only:
    - dev
  script:
    - docker pull $CONTAINER_TEST_IMAGE
    - docker tag $CONTAINER_TEST_IMAGE ${IMAGE_NAME}:dev
    - docker push ${IMAGE_NAME}:dev

trigger:
  stage: trigger
  only:
    - master
  script:
    - apk add --no-cache curl
    - "curl -X POST -F token=$TRIGGER_TOKEN -F ref=staging https://gitlab.com/api/v4/projects/1543637/trigger/pipeline"

