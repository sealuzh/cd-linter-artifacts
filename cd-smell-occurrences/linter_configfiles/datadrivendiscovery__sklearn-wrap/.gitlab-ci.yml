generate:
  stage: build

  image: registry.gitlab.com/datadrivendiscovery/images/testing:ubuntu-bionic-python36

  script:
    - |
      set -o errexit
      echo "Installing dependencies"
      pip3 install -r requirements.txt
      
      echo "Generating"
      python3 -m autogenerate.wrap_sklearn --dir autogenerate/resources/primitive-jsons --overlays autogenerate/resources/overlay_extras.json autogenerate/resources/overlay_classifiers.json autogenerate/resources/overlay_regressors.json autogenerate/resources/overlay_preprocessors.json --module_config autogenerate/config/setup.config.json --primitive_id_file autogenerate/d3m_sklearn_wrap_ids.json --hyperparams_to_tune autogenerate/resources/hyperparams_to_tune.yml
      echo "Running tests"
      ./run_tests.sh 10
      find . -name '*.pyc' -or -name __pycache__ -prune -exec rm -rf {} ';'
      if [ "${CI_COMMIT_REF_NAME}" = master -o "${CI_COMMIT_REF_NAME}" = devel ]; then
        if [ -n "${GIT_ACCESS_USER}" -a -n "${GIT_ACCESS_TOKEN}" ]; then
          echo "Pushing generated package"
          if [ "${CI_COMMIT_REF_NAME}" = master ]; then
            BRANCH=dist
          else
            BRANCH=dev-dist
          fi
          git clone https://${GIT_ACCESS_USER}:${GIT_ACCESS_TOKEN}@gitlab.com/${CI_PROJECT_PATH}.git --reference . generated &>/dev/null
          cd generated
          git config --local user.email noreply@datadrivendiscovery.org
          git config --local user.name "D3M CI"
          git checkout -b $BRANCH --track origin/$BRANCH
          rm -rf ./*
          cp -r ../autogenerate/d3m_sklearn_wrap/* ./
          git add * || true
          if ! git diff --cached --quiet ; then
            git commit -m "Generated by CI." -m "Source commmit: ${CI_COMMIT_SHA}" -m "[skip ci]"
            git push https://${GIT_ACCESS_USER}:${GIT_ACCESS_TOKEN}@gitlab.com/${CI_PROJECT_PATH}.git HEAD:refs/heads/$BRANCH &>/dev/null
          else
           echo "Nothing changed"
          fi
        fi
      fi

  artifacts:
    paths:
      - autogenerate/d3m_sklearn_wrap

  variables:
    GIT_SUBMODULE_STRATEGY: recursive

  except:
    - dist
    - dev-dist


primitive-json:
  stage: deploy

  image: registry.gitlab.com/datadrivendiscovery/images/core:ubuntu-bionic-python36-v2020.1.9

  script:
    - |
      set -o errexit
      ls
      echo "Generating primitive jsons"
      if [ "${CI_COMMIT_REF_NAME}" = master -o "${CI_COMMIT_REF_NAME}" = devel ]; then
        if [ -n "${GIT_ACCESS_USER}" -a -n "${GIT_ACCESS_TOKEN}" ]; then
          if [ "${CI_COMMIT_REF_NAME}" = master ]; then
            BRANCH=dist
          else
            BRANCH=dev-dist
          fi
          git clone https://gitlab.com/datadrivendiscovery/common-primitives.git
          cd common-primitives && pip3 install -e . && cd ../
          git clone https://${GIT_ACCESS_USER}:${GIT_ACCESS_TOKEN}@gitlab.com/${CI_PROJECT_PATH}.git --reference . generated &>/dev/null
          cd generated
          ls
          git checkout -b $BRANCH --track origin/$BRANCH
          pip3 install -e .
          cd ../
          ls
          python3 -m autogenerate.generate_primitive_jsons
          if [ "${CI_COMMIT_REF_NAME}" = master ]; then
            CORE_VERSION=$(python3 -c "import d3m; print(d3m.__version__)")
            git clone https://${GIT_ACCESS_USER}:${GIT_ACCESS_TOKEN}@gitlab.com/datadrivendiscovery/primitives.git primitives_repo &>/dev/null
            cd primitives_repo/
            git config --local user.email noreply@datadrivendiscovery.org
            git config --local user.name "D3M CI"
            ls
            git checkout -b JPL
            rm -rf v$CORE_VERSION/JPL
            mv ../autogenerate/$CORE_VERSION/JPL v$CORE_VERSION/
            git add * || true
            if ! git diff --cached --quiet ; then
              echo "Committing annotations"
              git commit -m "sklearn-wrap updates"
              COMMIT_BRANCH="JPL-${CI_PIPELINE_ID}"
              git push https://${GIT_ACCESS_USER}:${GIT_ACCESS_TOKEN}@gitlab.com/datadrivendiscovery/primitives.git HEAD:refs/heads/$COMMIT_BRANCH &>/dev/null
            fi
          fi
        fi
      fi

  artifacts:
    paths:
      - autogenerate
    
  only:
    refs:
      - master

  except:
    - dist
    - dev-dist

