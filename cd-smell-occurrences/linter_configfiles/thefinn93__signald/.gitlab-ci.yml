stages:
  - check for updates
  - build
  - test
  - publish
  - cleanup

variables:
  GRADLE_USER_HOME: "$CI_PROJECT_DIR/.gradle"
  GRADLE_OPTS: "-Dorg.gradle.daemon=false -Xmx512m"

cache:
  paths:
    - .gradle/wrapper
    - .gradle/caches

build-java-8:
  image: openjdk:8-jdk
  stage: build
  before_script:
    - apt update && apt install -y make
  except:
    - schedules
  script:
    - make installDist

build-java-9:
  image: openjdk:9-jdk
  stage: build
  before_script:
    - apt update && apt install -y make
  except:
    - schedules
  script:
    - make installDist

build-java-11:
  image: openjdk:11-jdk
  stage: build
  before_script:
    - apt update && apt install -y make
  except:
    - schedules
  script:
    - make installDist
  artifacts:
    paths:
      - build/

deb:build:
  stage: build
  image: registry.git.callpipe.com/finn/debian-repo-builder:latest
  retry: 2
  before_script:
    - export VERSION=$(./version.sh)
    - echo "Building signald version $VERSION"
  script:
    - gbp dch --ignore-branch --debian-tag="%(version)s" --git-author --new-version="$VERSION"
    - cat debian/changelog
    - dpkg-buildpackage -b
    - cp -rv ../signald_${VERSION}* .
  except:
    - schedules
  cache:
    key: deb-builder
  artifacts:
    paths:
      - "signald_*"

build-docker:
  image: docker:latest
  stage: build
  tags:
    - docker-builder
  only:
    - branches
    - tags
  before_script:
    - docker login -u ${CI_REGISTRY_USER} -p ${CI_REGISTRY_PASSWORD} ${CI_REGISTRY}
    - if [[ ! -z "${DOCKER_HUB_USERNAME}" ]]; then docker login -u ${DOCKER_HUB_USERNAME} -p ${DOCKER_HUB_PASSWORD}; fi
  script:
    - docker build -t ${CI_REGISTRY_IMAGE}:${CI_COMMIT_REF_SLUG} .
    - docker push ${CI_REGISTRY_IMAGE}:${CI_COMMIT_REF_SLUG}
    - if [[ "${CI_COMMIT_REF_SLUG}" == "master" ]]; then docker tag ${CI_REGISTRY_IMAGE}:${CI_COMMIT_REF_SLUG} ${CI_REGISTRY_IMAGE}:latest; fi;
    - if [[ "${CI_COMMIT_REF_SLUG}" == "master" ]]; then docker push ${CI_REGISTRY_IMAGE}:latest; fi;
    - if [[ ! -z "${DOCKER_HUB_USERNAME}" ]]; then docker tag ${CI_REGISTRY_IMAGE}:${CI_COMMIT_REF_SLUG} ${DOCKER_HUB_USERNAME}/signald:${CI_COMMIT_REF_SLUG}; fi
    - if [[ ! -z "${DOCKER_HUB_USERNAME}" ]]; then docker push ${DOCKER_HUB_USERNAME}/signald:${CI_COMMIT_REF_SLUG}; fi
    - if [[ ! -z "${DOCKER_HUB_USERNAME}" ]] && [[ "${CI_COMMIT_REF_SLUG}" == "master" ]]; then docker tag ${CI_REGISTRY_IMAGE}:${CI_COMMIT_REF_SLUG} ${DOCKER_HUB_USERNAME}/signald:latest; fi
    - if [[ ! -z "${DOCKER_HUB_USERNAME}" ]] && [[ "${CI_COMMIT_REF_SLUG}" == "master" ]]; then docker push ${DOCKER_HUB_USERNAME}/signald:latest; fi


deb:publish:
  stage: publish
  image: registry.git.callpipe.com/finn/debian-repo-builder:latest
  tags:
    - package-signer
  before_script:
    - mc config host add minio "${S3_URL}" "${AWS_ACCESS_KEY_ID}" "${AWS_SECRET_ACCESS_KEY}"
    - export SUITE=$(get-suite)
    - export VERSION=$(./version.sh)
    - mkdir -p public/dists/${SUITE}/
    - mc cp -r -q "minio/${S3_BUCKET}/dists/${SUITE}/" public/ || true
  script:
    - gpg --detach-sign signald_${VERSION}*.deb
    - cd public
    - release-deb ../ "${SIGNING_KEY}"
    - gpg --export --armor "${SIGNING_KEY}" > apt-signing-key.asc
    - for f in apt-signing-key.asc dists/${SUITE}/main/binary-amd64/signald_${VERSION}* $(find dists/ -type f | grep -v -E "\.deb$"); do mc cp -q "$f" "minio/${S3_BUCKET}/$f"; done
  except:
    - schedules
  artifacts:
    paths:
      - "signald_*.sig"
  dependencies:
    - deb:build

test:integration:
  image: openjdk:11-jdk
  stage: test
  before_script:
    - cp tools/log4j2.xml src/main/resources/log4j2.xml
  script:
    - ./gradlew integrationTest --info
  variables:
    SIGNAL_URL: $SIGNAL_TEST_SERVER
  artifacts:
    reports:
      junit: build/test-results/integrationTest/TEST-*.xml
  dependencies:
    - build-java-11

deb:cleanup:
  stage: cleanup
  image: registry.git.callpipe.com/finn/debian-repo-builder:latest
  only:
    - schedules
  before_script:
    - mc config host add minio "${S3_URL}" "${AWS_ACCESS_KEY_ID}" "${AWS_SECRET_ACCESS_KEY}"
  script:
    - repo-cron "minio/${S3_BUCKET}"
  variables:
    STORAGE_TIME: "31557600"  # Store 1 year of historical builds

checkupdates:gradle:
  stage: check for updates
  image: openjdk:11-jdk
  only:
    - schedules
    - feature/autoupdates
    - master
  before_script:
    - apt-get update && apt-get install -y jq
    - git config --global user.email "upgrade-robot@signald.org"
    - git config --global user.name "Upgrade Robot"
    - git remote set-url origin https://${GITLAB_USER}:${GITLAB_TOKEN}@git.callpipe.com/finn/signald.git
  script:
    - ./gradlew checkLibVersions | (grep UPGRADE || true)| cut -c 9- | tools/check-gradle-updates.sh
  allow_failure: true
  cache:
   policy: push

