<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">

  <modelVersion>4.0.0</modelVersion>
  <groupId>nl.robfaber</groupId>
  <version>1.1.0-SNAPSHOT</version>
  <artifactId>microservices</artifactId>
  <packaging>pom</packaging>

  <modules>
    <module>api-gateway</module>
    <module>service-registry</module>
    <module>admin-server</module>
    <module>config-server</module>
    <module>hystrix-dashboard</module>
    <module>example-capability-service</module>
    <module>example-experience-service</module>
    <module>starter-microservice</module>
    <module>starter-database</module>
    <module>cloud-gateway</module>
    <module>vizceral-server</module>
    <module>zipkin-server</module>
    <module>gatling-tests</module>
  </modules>

  <properties>
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
    <java.version>1.8</java.version>

    <!-- Docker properties-->
    <docker.image.prefix>robfaber</docker.image.prefix>
    <docker.maven.plugin>1.2.0</docker.maven.plugin>
    <docker.registry>registry.gitlab.com/robfaber/microservices</docker.registry>

    <!-- Dependencies -->
    <spring-boot.version>2.1.7.RELEASE</spring-boot.version>
    <spring-boot-admin.version>2.1.6</spring-boot-admin.version>
    <spring-cloud.version>Greenwich.SR3</spring-cloud.version>
    <micrometer.version>1.1.3</micrometer.version>

    <!-- Plugin Dependencies -->
    <maven-compiler-plugin.version>3.8.0</maven-compiler-plugin.version>
  </properties>

  <dependencyManagement>
    <dependencies>
      <dependency>
        <groupId>org.springframework.cloud</groupId>
        <artifactId>spring-cloud-dependencies</artifactId>
        <version>${spring-cloud.version}</version>
        <type>pom</type>
        <scope>import</scope>
      </dependency>
      <dependency>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-dependencies</artifactId>
        <version>${spring-boot.version}</version>
        <type>pom</type>
        <scope>import</scope>
      </dependency>
      <dependency>
        <groupId>io.micrometer</groupId>
        <artifactId>micrometer-registry-elastic</artifactId>
        <version>${micrometer.version}</version>
      </dependency>
      <dependency>
        <groupId>de.codecentric</groupId>
        <artifactId>spring-boot-admin-dependencies</artifactId>
        <version>${spring-boot-admin.version}</version>
        <type>pom</type>
        <scope>import</scope>
      </dependency>
    </dependencies>
  </dependencyManagement>

  <build>
    <pluginManagement>
      <plugins>
        <plugin>
          <groupId>org.springframework.boot</groupId>
          <artifactId>spring-boot-maven-plugin</artifactId>
          <version>${spring-boot.version}</version>
          <executions>
            <execution>
              <goals>
                <goal>repackage</goal>
                <goal>build-info</goal>
              </goals>
            </execution>
          </executions>
        </plugin>
      </plugins>
    </pluginManagement>
    <plugins>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-compiler-plugin</artifactId>
        <version>${maven-compiler-plugin.version}</version>
        <configuration>
          <source>${java.version}</source>
          <target>${java.version}</target>
        </configuration>
      </plugin>
      <plugin>
        <groupId>com.spotify</groupId>
        <artifactId>docker-maven-plugin</artifactId>
        <version>${docker.maven.plugin}</version>
        <configuration>
          <imageName>${docker.registry}/${project.artifactId}</imageName>
          <dockerDirectory>src/main/docker</dockerDirectory>
          <resources>
            <resource>
              <targetPath>/</targetPath>
              <directory>${project.build.directory}</directory>
              <include>${project.build.finalName}.jar</include>
            </resource>
          </resources>
        </configuration>
      </plugin>
    </plugins>
  </build>

  <scm>
    <connection>
      scm:git:ssh://git@gitlab.com:robfaber/microservices.git
    </connection>
    <developerConnection>
      scm:git:ssh://maven@gitlab.com:robfaber/microservices.git
    </developerConnection>
  </scm>

  <!-- For milestone and RC access-->
  <repositories>
    <repository>
      <id>spring-milestones</id>
      <name>Spring Milestones</name>
      <url>https://repo.spring.io/libs-milestone</url>
      <snapshots>
        <enabled>false</enabled>
      </snapshots>
    </repository>
    <repository>
      <id>codecentric-snapshot</id>
      <name>Codecentric nexus</name>
      <url>https://oss.sonatype.org/content/repositories/snapshots</url>
      <snapshots>
        <enabled>true</enabled>
      </snapshots>
    </repository>
  </repositories>
  <pluginRepositories>
    <pluginRepository>
      <id>repository.spring.release</id>
      <name>Spring GA Repository</name>
      <url>https://repo.spring.io/plugins-release/</url>
    </pluginRepository>
  </pluginRepositories>
</project>

