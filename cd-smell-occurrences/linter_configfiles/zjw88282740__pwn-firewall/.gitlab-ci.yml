# This file is a template, and might need editing before it works on your project.
# use the official gcc image, based on debian
# can use verions as well, like gcc:5.2
# see https://hub.docker.com/_/gcc/
image: gcc

build:
  stage: build
  # instead of calling g++ directly you can also use some build toolkit like make
  # install the necessary build tools when needed
  before_script: 
    - apt update && apt -y install libseccomp2 libseccomp-dev wget
    - uname -r
    - wget https://github.com/seccomp/libseccomp/releases/download/v2.3.3/libseccomp-2.3.3.tar.gz
    - tar -xzvf libseccomp-2.3.3.tar.gz
    - cd libseccomp-2.3.3
    - ./configure
    - make && make install
    - cd ..
  script: 
    - cd src && make
  artifacts:
    paths:
      - bin_waf
  # depending on your build setup it's most likely a good idea to cache outputs to reduce the build time
  # cache:
  #   paths:
  #     - "*.o"

# run tests using the binary built before
#test:
#  stage: test
#  script:
#    - ./runmytests.sh

