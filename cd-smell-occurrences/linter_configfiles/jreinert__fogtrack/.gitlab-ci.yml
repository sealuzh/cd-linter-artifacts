stages:
  - build
  - release

build linux:
  stage: build
  image: docker:stable
  before_script:
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
  script:
    - docker pull $CI_REGISTRY_IMAGE:$CI_COMMIT_BEFORE_SHA || true
    - docker build --cache-from $CI_REGISTRY_IMAGE:$CI_COMMIT_BEFORE_SHA -t $CI_REGISTRY_IMAGE:$CI_COMMIT_REF_SLUG -t $CI_REGISTRY_IMAGE:$CI_COMMIT_SHA .
    - docker push $CI_REGISTRY_IMAGE:$CI_COMMIT_REF_SLUG
    - docker push $CI_REGISTRY_IMAGE:$CI_COMMIT_SHA
  tags:
    - docker

build macos:
  stage: build
  before_script:
    - shards install --production
  script:
    - PKG_CONFIG_PATH="/usr/local/opt/openssl/lib/pkgconfig" shards build --release --production
  artifacts:
    paths:
      - bin
  tags:
    - macos

release linux:
  image: docker:stable
  artifacts:
    paths:
      - fogtrack
  stage: release
  before_script:
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
  script:
    - docker pull $CI_REGISTRY_IMAGE:$CI_COMMIT_SHA
    - docker tag $CI_REGISTRY_IMAGE:$CI_COMMIT_SHA $CI_REGISTRY_IMAGE:$CI_COMMIT_TAG
    - docker tag $CI_REGISTRY_IMAGE:$CI_COMMIT_SHA $CI_REGISTRY_IMAGE:latest
    - docker push $CI_REGISTRY_IMAGE:$CI_COMMIT_TAG
    - docker push $CI_REGISTRY_IMAGE:latest
    - container_id=$(docker create $CI_REGISTRY_IMAGE:latest)
    - docker cp $container_id:/opt/fogtrack/bin/fogtrack fogtrack
    - docker rm -v $container_id
  only:
    - tags
  tags:
    - docker

release macos:
  stage: release
  dependencies:
    - build macos
  script:
    - cp bin/fogtrack .
  artifacts:
    paths:
      - fogtrack
  only:
    - tags

