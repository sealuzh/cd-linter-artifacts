stages:
  - build
  - document
  - check
  - test
  - deploy
  - checkrhub

variables:
  _R_CHECK_CRAN_INCOMING_: "false"
  _R_CHECK_FORCE_SUGGESTS_: "true"
  CODECOV_TOKEN: "2329aed3-de38-468c-9a06-95564363211c"

before_script:
  - apt-get update

buildbinary:
  stage: build
  image: jozefhajnala/rdev:3.4.4
  script:
    - r -e 'devtools::build(binary = TRUE)'

documentation:
  stage: document
  image: jozefhajnala/rdev:3.4.4
  script:
    - r inst/ci/document.R

checkerrors:
  stage: check
  image: jozefhajnala/rdev:3.4.4
  script:
    - r -e 'if (!identical(devtools::check(document = FALSE, args = "--no-tests")[["errors"]], character(0))) stop("Check with Errors")'

checkwarnings:
  stage: check
  image: jozefhajnala/rdev:3.4.4
  script:
    - r -e 'if (!identical(devtools::check(document = FALSE, args = "--no-tests")[["warnings"]], character(0))) stop("Check with Warnings")'

checknotes:
  stage: check
  image: jozefhajnala/rdev:3.4.4
  script:
    - r -e 'if (!identical(devtools::check(document = FALSE, args = "--no-tests")[["notes"]], character(0))) stop("Check with Notes")'

unittests:
  stage: test
  image: jozefhajnala/rdev:3.4.4
  script:
    - r -e 'if (any(as.data.frame(devtools::test())[["failed"]] > 0)) stop("Some tests failed.")'

codecov:
  stage: test
  image: jozefhajnala/rdev:3.4.4
  script:
    - r -e 'covr::codecov()'

install:
  stage: deploy
  image: jozefhajnala/rdev:3.4.4
  script:
    - r -e 'devtools::install()'

check_mswin:
  stage: checkrhub
  image: index.docker.io/jozefhajnala/rhub:rbase
  script:
    - Rscript inst/rhubcheck.R "windows-x86_64-devel"

check_macos:
  stage: checkrhub
  image: index.docker.io/jozefhajnala/rhub:rbase
  script:
    - Rscript inst/rhubcheck.R "macos-elcapitan-release"

