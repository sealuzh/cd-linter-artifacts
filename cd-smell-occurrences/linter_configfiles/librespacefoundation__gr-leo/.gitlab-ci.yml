stages:
  - style 
  - building
  - documentation

style:
  stage: style

  before_script:
    - apt-get update -qq && apt-get install -y -qq astyle git

  script:
    - if (test $(astyle --dry-run --options=.astylerc --formatted lib/*.cc | wc -l) -eq 0); then (exit 0); else (exit 1); fi
    - if (test $(astyle --dry-run --options=.astylerc --formatted lib/*.h | wc -l) -eq 0); then (exit 0); else (exit 1); fi
    - if (test $(astyle --dry-run --options=.astylerc --formatted include/leo/*.h | wc -l) -eq 0); then (exit 0); else (exit 1); fi

opensuse_build:
  stage: building
  image: opensuse/tumbleweed
  before_script:
    - |
      zypper in -y \
          boost-devel \
          libboost_filesystem-devel \
          libboost_system-devel \
          libboost_thread-devel \
          libboost_program_options-devel \
          libboost_regex-devel \
          libboost_test-devel \
          python3 \
          python3-devel \
          swig \
          cmake \
          gcc-c++ \
          gcc \
          gnuradio \
          gnuradio-devel \
          gmp-devel \
          libmpir-devel \
          liborc-0_4-0 \
          orc \
          log4cpp-devel \
          git
 

  stage: building
  script:
        - mkdir -p build
        - cd build
        - cmake -DCMAKE_INSTALL_PREFIX=/usr -DLIB_SUFFIX=64 -DCMAKE_BUILD_TYPE=RelWithDebInfo ..
        - make
        - make install
        - python3 -c "import leo"
        
ubuntu_1910_build:
  image: ubuntu:19.10
  
  variables:
        DEBIAN_FRONTEND: "noninteractive"

  before_script:
    - apt-get update -qq -y
    - apt-get install software-properties-common -q -y
    - add-apt-repository ppa:gnuradio/gnuradio-releases
    - apt-get update -qq -y
    - |
      apt-get install -q -y \
          libboost-dev \
          libboost-date-time-dev \
          libboost-filesystem-dev \
          libboost-program-options-dev \
          libboost-system-dev \
          libboost-thread-dev \
          libboost-regex-dev \
          libboost-test-dev \
          swig \
          cmake \
          gcc \
          gnuradio-dev \
          libconfig++-dev \
          libgmp-dev \
          liborc-0.4-0 \
          liborc-0.4-dev \
          liborc-0.4-dev-bin \
          git


  stage: building
  script:
        - mkdir -p build
        - cd build
        - cmake -DCMAKE_INSTALL_PREFIX=/usr ..
        - make
        - make install
        - ldconfig
        - python3 -c "import leo"


ubuntu_1804_build:
  image: ubuntu:18.04
  
  variables:
        DEBIAN_FRONTEND: "noninteractive"

  before_script:
    - apt-get update -qq -y
    - apt-get install software-properties-common -q -y
    - add-apt-repository ppa:gnuradio/gnuradio-releases
    - apt-get update -qq -y
    - |
      apt-get install -q -y \
          libboost-dev \
          libboost-date-time-dev \
          libboost-filesystem-dev \
          libboost-program-options-dev \
          libboost-system-dev \
          libboost-thread-dev \
          libboost-regex-dev \
          libboost-test-dev \
          swig \
          cmake \
          gcc \
          gnuradio-dev \
          libconfig++-dev \
          libgmp-dev \
          liborc-0.4-0 \
          liborc-0.4-dev \
          liborc-0.4-dev-bin \
          git


  stage: building
  script:
        - mkdir -p build
        - cd build
        - cmake -DCMAKE_INSTALL_PREFIX=/usr ..
        - make
        - make install
        - ldconfig
        - python3 -c "import leo"

pages:
  image: opensuse/tumbleweed

  before_script:
    - |
      zypper in -y \
          boost-devel \
          libboost_filesystem-devel \
          libboost_system-devel \
          libboost_thread-devel \
          libboost_program_options-devel \
          libboost_regex-devel \
          libboost_test-devel \
          python3 \
          python3-devel \
          swig \
          cmake \
          gcc-c++ \
          gcc \
          doxygen \
          gnuradio \
          gnuradio-devel \
          gmp-devel \
          libmpir-devel \
          liborc-0_4-0 \
          orc \
          log4cpp-devel \
          git


  stage: documentation
  script:
      - mkdir -p build
      - cd build
      - rm -rf *
      - cmake  .. 
      - make doxygen_target
      - cd ..
      - rm -rf public/*
      - mv build/docs/doxygen/html public/  
  artifacts:
      paths:
      - public

