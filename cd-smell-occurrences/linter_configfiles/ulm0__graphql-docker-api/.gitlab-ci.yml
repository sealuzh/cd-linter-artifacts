stages:
  - build
  - release-docker
  - test-build

.test-build: &test-build
  image: golang:1.8-alpine
  stage: test-build
  except:
    - tags
  script:
    - apk add --no-cache build-base git bash
    - echo "http://dl-cdn.alpinelinux.org/alpine/edge/main" >> /etc/apk/repositories
    - echo "http://dl-cdn.alpinelinux.org/alpine/edge/community" >> /etc/apk/repositories
    - echo "http://dl-cdn.alpinelinux.org/alpine/edge/testing" >> /etc/apk/repositories
    - apk add --no-cache upx
    - mkdir -p /go/src/gitlab.com/ulm0/graphql-docker-api/
    - cp -r ./ /go/src/gitlab.com/ulm0/graphql-docker-api/
    - cd /go/src/gitlab.com/ulm0/graphql-docker-api/cmd/gdapi
    - go get -d ./
    - CGO_ENABLED=0 GOOS=linux go build -a -ldflags="-s -w" -installsuffix cgo -o /builds/ulm0/graphql-docker-api/gdapi-amd64 main.go
    - cd /builds/ulm0/graphql-docker-api/
    - upx --ultra-brute -qq gdapi-*
  artifacts:
    name: "$CI_JOB_NAME"
    paths:
      - /builds/ulm0/graphql-docker-api/gdapi-amd64
    expire_in: 1 week

.build: &build
  image: golang:1.8-alpine
  stage: build
  only:
    - tags
  script:
    - apk add --no-cache build-base git bash
    - echo "http://dl-cdn.alpinelinux.org/alpine/edge/main" >> /etc/apk/repositories
    - echo "http://dl-cdn.alpinelinux.org/alpine/edge/community" >> /etc/apk/repositories
    - echo "http://dl-cdn.alpinelinux.org/alpine/edge/testing" >> /etc/apk/repositories
    - apk add --no-cache upx
    - mkdir -p /go/src/gitlab.com/ulm0/graphql-docker-api/
    - cp -r ./ /go/src/gitlab.com/ulm0/graphql-docker-api/
    - cd /go/src/gitlab.com/ulm0/graphql-docker-api/cmd/gdapi
    - go get -d ./
    - CGO_ENABLED=0 GOOS=linux go build -a -ldflags="-s -w" -installsuffix cgo -o /builds/ulm0/graphql-docker-api/gdapi-amd64 main.go
    - CGO_ENABLED=0 GOOS=linux GOARM=5 GOARCH=arm go build -a -ldflags="-s -w" -installsuffix cgo -o /builds/ulm0/graphql-docker-api/gdapi-armv5 main.go
    - CGO_ENABLED=0 GOOS=linux GOARM=7 GOARCH=arm go build -a -ldflags="-s -w" -installsuffix cgo -o /builds/ulm0/graphql-docker-api/gdapi-armv7 main.go
    - CGO_ENABLED=0 GOOS=linux GOARCH=arm64 go build -a -ldflags="-s -w" -installsuffix cgo -o /builds/ulm0/graphql-docker-api/gdapi-arm64 main.go
    - cd /builds/ulm0/graphql-docker-api/
    - upx --ultra-brute -qq gdapi-*
  artifacts:
    name: "$CI_JOB_NAME"
    paths:
      - /builds/ulm0/graphql-docker-api/gdapi-amd64
      - /builds/ulm0/graphql-docker-api/gdapi-armv5
      - /builds/ulm0/graphql-docker-api/gdapi-armv7
      - /builds/ulm0/graphql-docker-api/gdapi-arm64
    expire_in: 1 week

.images: &images
  image: docker:17.06
  stage: release-docker
  services:
    - docker:17.06-dind
  variables:
    DOCKER_DRIVER: overlay2
  tags:
    - docker
  only:
    - tags
  script:
    - docker build --build-arg BUILD_DATE=`date -u +"%Y-%m-%dT%H:%M:%SZ"` --build-arg VCS_REF=$CI_COMMIT_SHA --build-arg VERSION=$(echo $CI_COMMIT_TAG | sed 's|v||') -t ulm0/$CI_JOB_NAME:$(echo $CI_COMMIT_TAG | sed 's|v||') .
    - docker tag ulm0/$CI_JOB_NAME:$(echo $CI_COMMIT_TAG | sed 's|v||') ulm0/$CI_JOB_NAME:latest
    - docker tag ulm0/$CI_JOB_NAME:$(echo $CI_COMMIT_TAG | sed 's|v||') $CI_REGISTRY_IMAGE:$(echo $CI_COMMIT_TAG | sed 's|v||')
    - docker tag ulm0/$CI_JOB_NAME:$(echo $CI_COMMIT_TAG | sed 's|v||') $CI_REGISTRY_IMAGE:latest
    - docker login -u gitlab-ci-token -p $CI_JOB_TOKEN $CI_REGISTRY
    - docker login -u $DOCKER_HUB_USER -p $DOCKER_HUB_PASSWORD
    - docker push $CI_REGISTRY_IMAGE
    - docker push ulm0/$CI_JOB_NAME
    - docker logout $CI_REGISTRY
    - docker logout

bins: *build
docker-gql: *images
test-bin: *test-build

