image: registry.gitlab.com/orobardet/gitlab-ci-linter/build:1.13

stages:
  - vendors
  - checks
  - tests
  - build
  - releasenote

variables:
  AF_BINARY_URL: "https://api.bintray.com/content/orobardet/gitlab-ci-linter/gitlab-ci-linter"
  AF_BINARY_SUBJECT: "orobardet"
  AF_BINARY_REPO: "gitlab-ci-linter"
  AF_BINARY_PACKAGE: "gitlab-ci-linter"
  CI_GITLAB_URL: "https://gitlab.com"

gofmt:
  stage: checks
  script: gofmt -s -l -e $(find . -name "*.go" -type f -not -path "./vendor/*")

govet:
  stage: checks
  script: go vet

snyk:
  stage: checks
  script:
    - snyk test
    - snyk monitor
  only:
    - branches@orobardet/gitlab-ci-linter

go test:
  stage: tests
  script: go test

.build_binary: &_binary
  stage: build
  script:
    - export GOTARGET=${CI_JOB_NAME##* }
    - export GOOS=${GOTARGET%%-*}
    - export GOARCH=${GOTARGET##*-}
    - export EXT="$([[ "$GOOS" = "windows" ]] && echo ".exe")"
    - export BINARY=gitlab-ci-linter.${GOOS}-${GOARCH}${EXT}
    - if [[ $VERSION ]] ; then export VERSION=${VERSION##v} ; fi
    - make

.build_binary_dev: &_binary_dev
  <<: *_binary
  variables:
    DEBUG: "1"
  only:
   - branches
  artifacts:
    name: "${CI_JOB_NAME}"
    paths:
      - gitlab-ci-linter.*
    expire_in: 1 week

.build_binary_release: &_binary_release
  <<: *_binary
  variables:
    VERSION: ${CI_COMMIT_TAG}
    RELEASE: "1"
  only:
    - tags@orobardet/gitlab-ci-linter
  after_script:
    - curl -T $BINARY -u${AFI_API_USER}:${AF_API_KEY} "$AF_BINARY_URL/content/$AF_BINARY_SUBJECT/$AF_BINARY_REPO/$AF_BINARY_PACKAGE/${VERSION}/$(basename $BINARY)?override=1&publish=1"
  artifacts:
    name: "${CI_JOB_NAME}"
    paths:
      - gitlab-ci-linter.*
    expire_in: 1 year

dev build linux-386: *_binary_dev
dev build linux-amd64: *_binary_dev
dev build linux-arm: *_binary_dev
dev build linux-arm64: *_binary_dev
dev build windows-386: *_binary_dev
dev build windows-amd64: *_binary_dev
dev build darwin-386: *_binary_dev
dev build darwin-amd64: *_binary_dev

release build linux-386: *_binary_release
release build linux-amd64: *_binary_release
release build linux-arm: *_binary_release
release build linux-arm64: *_binary_release
release build windows-386: *_binary_release
release build windows-amd64: *_binary_release
release build darwin-386: *_binary_release
release build darwin-amd64: *_binary_release

Update Release note:
  stage: releasenote
  variables:
    VERSION: ${CI_COMMIT_TAG}
  script: ci/update-gitlab-release.sh
  only:
    - tags@orobardet/gitlab-ci-linter

