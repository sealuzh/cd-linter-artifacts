# This file is a template, and might need editing before it works on your project.
# use the official gcc image, based on debian
# can use verions as well, like gcc:5.2
# see https://hub.docker.com/_/gcc/
image: gcc

before_script:
   - apt-get update -y
   - apt-get install --yes cmake git psmisc
   - git submodule update --init --recursive
   - cd lib/RF24
   - ./configure --driver=SPIDEV
   - make 
   - make install
   - cp -r utility/ /usr/local/include/RF24/
   - cd ../../

build:
  stage: build
  tags: 
    - linux
  # instead of calling g++ directly you can also use some build toolkit like make
  # install the necessary build tools when needed
  # before_script: 
  #   - apt update && apt -y install make autoconf 
  script: 
    # build
    - mkdir build
    - cd build
    - cmake ../src/baldur 
    - make
    - make install

    # does it run?   
    - baldur --nopen &

    # kill is probaly not necessary just to make 
    # sure all our processes are done
    - killall baldur  
  #artifacts:
  #  paths:
  #    - mybinary
  # depending on your build setup it's most likely a good idea to cache outputs to reduce the build time
  # cache:
  #   paths:
  #     - "*.o"

# run tests using the binary built before
test:
  stage: test
  script:
    - mkdir tests
    - cd tests
    - cmake ../src/baldur-test
    - make
    - ./baldur-test
      

