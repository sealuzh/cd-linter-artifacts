.node: &node_maintenance
  image: node:6-alpine

.node: &node_lts
  image: node:8-alpine

.node: &node_latest
  image: node:10-alpine

.node: &install
  stage: install
  script:
    - npm run install:ci
  cache:
    key: "$CI_COMMIT_REF_SLUG-$CI_JOB_NAME"
    paths:
      - node_modules/
  artifacts:
    expire_in: 1 day
    paths:
      - node_modules/
  only:
    - master
    - develop

.node: &test
  stage: test
  script:
    - npm run test:ci
  only:
    - master
    - develop

stages:
  - install
  - test
  - analysis
  - external
  - build
  - deploy

install:lts:
  <<: *node_lts
  <<: *install

install:latest:
  <<: *node_latest
  <<: *install

test:lts:
  <<: *node_lts
  <<: *test
  dependencies:
    - install:lts

test:latest:
  <<: *node_latest
  <<: *test
  dependencies:
    - install:latest
  artifacts:
    expire_in: 1 day
    paths:
      - coverage/

tslint:
  <<: *node_latest
  stage: analysis
  script:
    - npm run lint:ci
  dependencies:
    - install:latest
  only:
    - master
    - develop

docs:dev:
  <<: *node_latest
  stage: analysis
  script:
    - npm run docs:ci
  dependencies:
    - install:latest
  only:
    - develop

docs:prod:
  <<: *node_latest
  stage: analysis
  script:
    - npm run docs:ci:prod
  dependencies:
    - install:latest
  only:
    - master

coverage:
  <<: *node_latest
  stage: analysis
  script:
    - npx coverage-average ./coverage/text-summary.txt
  dependencies:
    - install:latest
    - test:latest
  only:
    - master
    - develop

sonarqube:
  image: electrostar/sonar-scanner:latest
  stage: external
  before_script:
    - apk add --no-cache nodejs
  script:
    - sonar-scanner -X -D sonar.host.url=$SONAR_URL -D sonar.login=$SONAR_TOKEN
  dependencies:
    - install:latest
    - test:latest
    - tslint
  only:
    - master
    - develop

build:prod:
  <<: *node_latest
  stage: build
  script:
    - npm run build:prod
    - sed '/\"devDependencies\"/,/}/ d; /^$/d' -i dist/package.json
  artifacts:
    expire_in: 1 day
    paths:
      - dist/
  dependencies:
    - install:latest
  only:
    - master

documentation:
  <<: *node_latest
  stage: build
  script:
    - npm run docs
  artifacts:
    expire_in: 1 day
    paths:
      - documentation/
  dependencies:
    - install:latest
  only:
    - master

deploy:npm:
  <<: *node_latest
  stage: deploy
  before_script:
    - apk add --no-cache git
  script:
    - npx semantic-release
  dependencies:
    - install:latest
    - build:prod
  only:
    - master

pages:
  <<: *node_latest
  stage: deploy
  script:
    - cp -R documentation/. public
    - mkdir -p public/coverage
    - cp -R coverage/lcov-report/. public/coverage
    - mkdir -p public/tests
    - cp -R coverage/test-report.html public/tests/index.html
  artifacts:
    paths:
    - public
  dependencies:
    - test:latest
    - documentation
  only:
    - master

