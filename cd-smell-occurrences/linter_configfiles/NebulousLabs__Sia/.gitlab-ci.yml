stages:
  - lint
  - test
  - deploy

variables:
  legacy_pkgs: "./node \
  ./node/api \
  ./node/api/server"
  package_pkgs: "./build \
  ./cmd/sia-node-scanner \
  ./cmd/siac \
  ./cmd/siad \
  ./compatibility \
  ./crypto \
  ./encoding \
  ./modules \
  ./modules/consensus \
  ./modules/explorer \
  ./modules/gateway \
  ./modules/host \
  ./modules/host/contractmanager \
  ./modules/host/mdm \
  ./modules/renter \
  ./modules/renter/contractor \
  ./modules/renter/filesystem \
  ./modules/renter/hostdb \
  ./modules/renter/hostdb/hosttree \
  ./modules/renter/proto \
  ./modules/renter/siadir \
  ./modules/renter/siafile \
  ./modules/renter/skynetblacklist \
  ./modules/miner \
  ./modules/wallet \
  ./modules/transactionpool \
  ./persist \
  ./sync \
  ./types"
  siatest_pkgs: "./siatest \
  ./siatest/consensus \
  ./siatest/daemon \
  ./siatest/gateway \
  ./siatest/host \
  ./siatest/miner \
  ./siatest/transactionpool \
  ./siatest/wallet"
  siatest_renter_pkgs: "./siatest/renter \
  ./siatest/renter/contractor \
  ./siatest/renter/hostdb \
  ./siatest/renterhost"

default: &default_params
  ## Run tests with most recent golang version to take advantage of any perf
  ## improvements.
  image: golang:1.13.8
  before_script:
    - mkdir -p .cache/gocache
    - export PATH=$PATH:$CI_PROJECT_DIR/.cache/bin/
    - export GOPATH="$CI_PROJECT_DIR/.cache"

## Define the default test parameters.
.default_test: &default_test_params
  ## Merge the contents of the 'default_params' alias
  <<: *default_params
  stage: test

  ## disable default tests for scheduled pipelines (nightlies)
  except:
    - schedules


## Define the default nightly test parameters.
.default_nightly_test: &default_nightly_params
  <<: *default_test_params
  ## Only run during scheduled pipelines.
  except:
   -  ""
  only:
   - schedules

  artifacts:
    name: "SiaTesting-$CI_JOB_NAME"
    paths:
      - $CI_PROJECT_DIR/SiaTesting
      - $CI_PROJECT_DIR/cover/cover.out
    when: always

  after_script:
    - cp -R /tmp/SiaTesting $CI_PROJECT_DIR/SiaTesting

lint:
  stage: lint
  cache:
    key: lint-cache
    paths:
      - .cache
  script: 
    ## This is the recommended way to install golang-ci lint.
    - export GOCACHE=$CI_PROJECT_DIR/.cache/gocache
    - wget -O- -nv https://raw.githubusercontent.com/golangci/golangci-lint/master/install.sh | sh -s v1.20.1
    - apt-get update
    - apt-get -y install python3-pip
    - pip3 install codespell
    - ./bin/golangci-lint run -c .golangci.yml ./...
    - make lint-analysis
    - make markdown-spellcheck
    - make test

build:
  stage: lint
  ## go 1.13 is the minimum accepted version for building Sia.
  image: golang:1.13
  artifacts:
    name: "Binaries"
    paths:
      - $CI_PROJECT_DIR/artifacts
  script:
    - ./check-builds.sh

legacy-tests:
  <<: *default_test_params
  cache:
    key: legacy-cache
    paths:
      - .cache
  script: 
    - make test-long run=. pkgs=$legacy_pkgs

package-tests:
  <<: *default_test_params
  cache:
    key: package-cache
    paths:
      - .cache
  script: 
    - make test-long run=. pkgs=$package_pkgs
    
siatest-tests:
  <<: *default_test_params
  cache:
    key: integration-cache
    paths:
      - .cache
  script:
    - make test-long run=. pkgs=$siatest_pkgs

siatest-renter-tests:
  <<: *default_test_params
  cache:
    key: siatest-renter-tests-cache
    paths:
      - .cache
  script:
    - apt-get update
    - apt-get install -y fuse
    - make test-long run=. pkgs=$siatest_renter_pkgs

legacy-tests-nightly:
  <<: *default_nightly_params
  script: 
    - make test-vlong run=. pkgs=$legacy_pkgs

package-tests-nightly:
  <<: *default_nightly_params
  script: 
    - make test-vlong run=. pkgs=$package_pkgs

siatest-tests-nightly:
  <<: *default_nightly_params
  script:
    - make test-vlong run=. pkgs=$siatest_pkgs

siatest-renter--tests-nightly:
  <<: *default_nightly_params
  script:
    - apt-get update
    - apt-get install -y fuse
    - make test-vlong run=. pkgs=$siatest_renter_pkgs

