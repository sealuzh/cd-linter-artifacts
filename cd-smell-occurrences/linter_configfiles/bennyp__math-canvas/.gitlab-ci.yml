# stages:
#   - prepare
#   - test
#   - build
#   - deploy
#
# prepare:
#   image: "registry.gitlab.com/bennyp/polymer-test:latest"
#   stage: prepare
#   script:
#     - yarn install
#     - bower install --allow-root
#   artifacts:
#     name: "${CI_JOB_NAME}_${CI_COMMIT_REF_NAME}"
#     expire_in: 3 days
#     paths:
#       - bower_components/
#       - node_modules/
#       - functions/
#       - src/
#       - test/
#       - bower.json
#       - index.html
#       - manifest.json
#       - package.json
#       - polymer.json
#
#
# test:
#   image: "registry.gitlab.com/bennyp/polymer-test:latest"
#   stage: test
#   dependencies:
#     - prepare
#   script:
#     - xvfb-run polymer test
#
#
# build:
#   image: "registry.gitlab.com/bennyp/polymer-test:latest"
#   stage: build
#   dependencies:
#     - prepare
#   script:
#     - polymer build
#   artifacts:
#     name: "${CI_JOB_NAME}_${CI_COMMIT_REF_NAME}"
#     expire_in: 1 week
#     paths:
#       - node_modules/
#       - build/$ENVIRONMENT/
#
# deploy:production:
#   image: devillex/docker-firebase
#   stage: deploy
#   environment: production
#   dependencies:
#     - build
#   only:
#     - master
#   script:
#     - cd functions
#     - yarn install
#     - cd ..
#     - firebase deploy -m "Pipeline $CI_PIPELINE_ID, build $CI_BUILD_ID" -p "build/production" --non-interactive

stages:
  - doitall

prepare:
  image: "registry.gitlab.com/bennyp/polymer-test:latest"
  stage: doitall
  script:
    - yarn install
    - bower install --allow-root
    - xvfb-run polymer test
    - polymer build
    - cd functions
    - yarn install
    - cd ..
    - firebase deploy -m "Pipeline $CI_PIPELINE_ID, build $CI_BUILD_ID" -p "build/production" --non-interactive

