variables:
  CONTAINER_TEST_IMAGE: psono-docker.jfrog.io/psono/psono-client:$CI_BUILD_REF_NAME
  CONTAINER_RELEASE_IMAGE: psono-docker.jfrog.io/psono/psono-client:latest

stages:
  - test
  - build
  - release
  - deploy

test-unittests:
  except:
    - schedules
  stage: test
  image: psono-docker.jfrog.io/ubuntu:16.04
  script:
    - sh ./var/build-ubuntu.sh
    - apt-get install -y --no-install-recommends xvfb x11vnc fluxbox xterm chromium-browser
#    - curl -fsSL https://dl-ssl.google.com/linux/linux_signing_key.pub | apt-key add -
#    - echo "deb [arch=amd64] http://dl.google.com/linux/chrome/deb/ stable main" > /etc/apt/sources.list.d/google-chrome.list
#    - apt-get update
#    - apt-get install -y google-chrome-stable
    - karma start ./unittests/karma-chromium-headless.conf.js

test-linter:
  except:
    - schedules
  stage: test
  image: psono-docker.jfrog.io/ubuntu:16.04
  script:
    - sh ./var/build-ubuntu.sh
    - cat ./build/firefox/manifest.json
    - addons-linter --help
    - addons-linter ./build/firefox


test-upload-translations:
  stage: test
  image: psono-docker.jfrog.io/python:3
  script:
    - pip install requests
    - python3 var/sync_translations.py
  only:
    - develop


build-docker-image:
  except:
    - schedules
  stage: build
  image: psono-docker.jfrog.io/ubuntu:16.04
  services:
    - docker:18-dind
  variables:
    DOCKER_HOST: 'tcp://docker:2375'
  script:
    - sh ./var/download_translations_from_artifactory.sh
    - sh ./var/build-ubuntu.sh
    - curl -fSL "https://download.docker.com/linux/static/stable/x86_64/docker-17.12.1-ce.tgz" -o docker.tgz && echo "1270dce1bd7e1838d62ae21d2505d87f16efc1d9074645571daaefdfd0c14054 *docker.tgz" | sha256sum -c - && tar -xzvf docker.tgz && mv docker/* /usr/local/bin/ && rm -Rf docker*
    - docker info
    - echo $artifactory_credentials | docker login --username=gitlab --password-stdin psono-docker.jfrog.io
    - docker build -t $CONTAINER_TEST_IMAGE --pull .
    - docker push $CONTAINER_TEST_IMAGE
    - curl -fL https://getcli.jfrog.io | sh
    - ./jfrog rt c rt-server-1 --url=https://psono.jfrog.io/psono --user=gitlab --password=$artifactory_credentials
    - ./jfrog rt sp "docker/psono/psono-client/$CI_BUILD_REF_NAME/manifest.json" "CI_BUILD_REF_NAME=$CI_BUILD_REF_NAME;CI_COMMIT_SHA=$CI_COMMIT_SHA;CI_COMMIT_URL=$CI_PROJECT_URL/commit/$CI_COMMIT_SHA;CI_PROJECT_ID=$CI_PROJECT_ID;CI_PROJECT_NAME=$CI_PROJECT_NAME;CI_PROJECT_NAMESPACE=$CI_PROJECT_NAMESPACE;CI_PROJECT_URL=$CI_PROJECT_URL;CI_PIPELINE_ID=$CI_PIPELINE_ID;CI_PIPELINE_URL=$CI_PROJECT_URL/pipelines/$CI_PIPELINE_ID;CI_COMMIT_REF_NAME=$CI_COMMIT_REF_NAME;CI_JOB_ID=$CI_JOB_ID;CI_JOB_URL=$CI_PROJECT_URL/-/jobs/$CI_JOB_ID;CI_JOB_NAME=$CI_JOB_NAME;CI_JOB_STAGE=$CI_JOB_STAGE;CI_RUNNER_ID=$CI_RUNNER_ID;GITLAB_USER_ID=$GITLAB_USER_ID;CI_SERVER_VERSION=$CI_SERVER_VERSION"
    - ./jfrog rt sp "docker/psono/psono-client/$CI_BUILD_REF_NAME/manifest.json" "CI_COMMIT_TAG=$CI_COMMIT_TAG" || true



build-firefox-extension:
  except:
    - schedules
  stage: build
  image: psono-docker.jfrog.io/ubuntu:16.04
  script:
    - sh ./var/download_translations_from_artifactory.sh
    - sh ./var/build-ubuntu.sh
    - sh ./var/package-firefox-extension.sh
    - curl -fL https://getcli.jfrog.io | sh
    - ./jfrog rt c rt-server-1 --url=https://psono.jfrog.io/psono --user=gitlab --password=$artifactory_credentials
    - ./jfrog rt u --props="CI_BUILD_REF_NAME=$CI_BUILD_REF_NAME;CI_COMMIT_SHA=$CI_COMMIT_SHA;CI_COMMIT_URL=$CI_PROJECT_URL/commit/$CI_COMMIT_SHA;CI_PROJECT_ID=$CI_PROJECT_ID;CI_PROJECT_NAME=$CI_PROJECT_NAME;CI_PROJECT_NAMESPACE=$CI_PROJECT_NAMESPACE;CI_PROJECT_URL=$CI_PROJECT_URL;CI_PIPELINE_ID=$CI_PIPELINE_ID;CI_PIPELINE_URL=$CI_PROJECT_URL/pipelines/$CI_PIPELINE_ID;CI_COMMIT_REF_NAME=$CI_COMMIT_REF_NAME;CI_JOB_ID=$CI_JOB_ID;CI_JOB_URL=$CI_PROJECT_URL/-/jobs/$CI_JOB_ID;CI_JOB_NAME=$CI_JOB_NAME;CI_JOB_STAGE=$CI_JOB_STAGE;CI_RUNNER_ID=$CI_RUNNER_ID;GITLAB_USER_ID=$GITLAB_USER_ID;CI_SERVER_VERSION=$CI_SERVER_VERSION" /builds/psono/psono-client/dist/firefox/psono.firefox.PW.zip psono/client/$CI_BUILD_REF_NAME/firefox-extension.zip
    - ./jfrog rt sp "psono/client/$CI_BUILD_REF_NAME/firefox-extension.zip" "CI_COMMIT_TAG=$CI_COMMIT_TAG" || true
    - mv /builds/psono/psono-client/build/firefox ../
    - rm -Rf *
    - rm -Rf .* 2> /dev/null || true
    - mv ../firefox/* ./
  artifacts:
    name: "firefox_$CI_BUILD_REF_NAME"
    paths:
    - ./*


build-chrome-extension:
  except:
    - schedules
  stage: build
  image: psono-docker.jfrog.io/ubuntu:16.04
  script:
    - sh ./var/download_translations_from_artifactory.sh
    - sh ./var/build-ubuntu.sh
    - sh ./var/package-chrome-extension.sh
    - curl -fL https://getcli.jfrog.io | sh
    - ./jfrog rt c rt-server-1 --url=https://psono.jfrog.io/psono --user=gitlab --password=$artifactory_credentials
    - ./jfrog rt u --props="CI_BUILD_REF_NAME=$CI_BUILD_REF_NAME;CI_COMMIT_SHA=$CI_COMMIT_SHA;CI_COMMIT_URL=$CI_PROJECT_URL/commit/$CI_COMMIT_SHA;CI_PROJECT_ID=$CI_PROJECT_ID;CI_PROJECT_NAME=$CI_PROJECT_NAME;CI_PROJECT_NAMESPACE=$CI_PROJECT_NAMESPACE;CI_PROJECT_URL=$CI_PROJECT_URL;CI_PIPELINE_ID=$CI_PIPELINE_ID;CI_PIPELINE_URL=$CI_PROJECT_URL/pipelines/$CI_PIPELINE_ID;CI_COMMIT_REF_NAME=$CI_COMMIT_REF_NAME;CI_JOB_ID=$CI_JOB_ID;CI_JOB_URL=$CI_PROJECT_URL/-/jobs/$CI_JOB_ID;CI_JOB_NAME=$CI_JOB_NAME;CI_JOB_STAGE=$CI_JOB_STAGE;CI_RUNNER_ID=$CI_RUNNER_ID;GITLAB_USER_ID=$GITLAB_USER_ID;CI_SERVER_VERSION=$CI_SERVER_VERSION" /builds/psono/psono-client/dist/chrome/psono.chrome.PW.zip psono/client/$CI_BUILD_REF_NAME/chrome-extension.zip
    - ./jfrog rt sp "psono/client/$CI_BUILD_REF_NAME/chrome-extension.zip" "CI_COMMIT_TAG=$CI_COMMIT_TAG" || true
    - mv /builds/psono/psono-client/build/chrome ../
    - rm -Rf *
    - rm -Rf .* 2> /dev/null || true
    - mv ../chrome/* ./
  artifacts:
    name: "chrome_$CI_BUILD_REF_NAME"
    paths:
    - ./*


build-webclient:
  except:
    - schedules
  stage: build
  image: psono-docker.jfrog.io/ubuntu:16.04
  script:
    - sh ./var/download_translations_from_artifactory.sh
    - sh ./var/build-ubuntu.sh
    - sh ./var/package-webclient.sh
    - curl -fL https://getcli.jfrog.io | sh
    - ./jfrog rt c rt-server-1 --url=https://psono.jfrog.io/psono --user=gitlab --password=$artifactory_credentials
    - ./jfrog rt u --props="CI_BUILD_REF_NAME=$CI_BUILD_REF_NAME;CI_COMMIT_SHA=$CI_COMMIT_SHA;CI_COMMIT_URL=$CI_PROJECT_URL/commit/$CI_COMMIT_SHA;CI_PROJECT_ID=$CI_PROJECT_ID;CI_PROJECT_NAME=$CI_PROJECT_NAME;CI_PROJECT_NAMESPACE=$CI_PROJECT_NAMESPACE;CI_PROJECT_URL=$CI_PROJECT_URL;CI_PIPELINE_ID=$CI_PIPELINE_ID;CI_PIPELINE_URL=$CI_PROJECT_URL/pipelines/$CI_PIPELINE_ID;CI_COMMIT_REF_NAME=$CI_COMMIT_REF_NAME;CI_JOB_ID=$CI_JOB_ID;CI_JOB_URL=$CI_PROJECT_URL/-/jobs/$CI_JOB_ID;CI_JOB_NAME=$CI_JOB_NAME;CI_JOB_STAGE=$CI_JOB_STAGE;CI_RUNNER_ID=$CI_RUNNER_ID;GITLAB_USER_ID=$GITLAB_USER_ID;CI_SERVER_VERSION=$CI_SERVER_VERSION" /builds/psono/psono-client/dist/webclient/psono.webclient.PW.zip psono/client/$CI_BUILD_REF_NAME/webclient.zip
    - ./jfrog rt sp "psono/client/$CI_BUILD_REF_NAME/webclient.zip" "CI_COMMIT_TAG=$CI_COMMIT_TAG" || true
    - mv /builds/psono/psono-client/build/webclient ../
    - rm -Rf *
    - rm -Rf .* 2> /dev/null || true
    - mv ../webclient/* ./
  artifacts:
    name: "webclient_$CI_BUILD_REF_NAME"
    paths:
    - ./*


release-artifacts:
  except:
    - schedules
  stage: release
  image: psono-docker.jfrog.io/ubuntu:16.04
  script:
    - apt-get update
    - apt-get install -y curl
    - curl -fL https://getcli.jfrog.io | sh
    - ./jfrog rt c rt-server-1 --url=https://psono.jfrog.io/psono --user=gitlab --password=$artifactory_credentials
    - ./jfrog rt cp --flat psono/client/$CI_BUILD_REF_NAME/firefox-extension.zip psono/client/latest/
    - ./jfrog rt cp --flat psono/client/$CI_BUILD_REF_NAME/chrome-extension.zip psono/client/latest/
    - ./jfrog rt cp --flat psono/client/$CI_BUILD_REF_NAME/webclient.zip psono/client/latest/
  only:
    - /^v[0-9]*\.[0-9]*\.[0-9]*$/


release-docker:
  except:
    - schedules
  stage: release
  image: psono-docker.jfrog.io/docker:git
  services:
    - docker:18-dind
  script:
    - docker info
    - echo $artifactory_credentials | docker login --username=gitlab --password-stdin psono-docker.jfrog.io
    - docker pull $CONTAINER_TEST_IMAGE
    - docker tag $CONTAINER_TEST_IMAGE $CONTAINER_RELEASE_IMAGE
    - docker push $CONTAINER_RELEASE_IMAGE
  only:
    - /^v[0-9]*\.[0-9]*\.[0-9]*$/


#deploy-security-scan-image:
#  except:
#    - schedules
#  stage: deploy
#  image: psono-docker.jfrog.io/docker:git
#  services:
#    - docker:18-dind
#  script:
#    - docker info
#    - echo $artifactory_credentials | docker login --username=gitlab --password-stdin psono-docker.jfrog.io
#    - echo $docker_hub_credentials | docker login --username=psonogitlab --password-stdin
#    - docker pull $CONTAINER_TEST_IMAGE
#    - docker tag $CONTAINER_TEST_IMAGE psono/security-scans:psono-client-ce-$CI_BUILD_REF_NAME
#    - docker push psono/security-scans:psono-client-ce-$CI_BUILD_REF_NAME


deploy-docker:
  except:
    - schedules
  stage: deploy
  image: psono-docker.jfrog.io/docker:git
  services:
    - docker:18-dind
  script:
    - echo $artifactory_credentials | docker login --username=gitlab --password-stdin psono-docker.jfrog.io
    - echo $docker_hub_credentials | docker login --username=psonogitlab --password-stdin
    - sh ./var/deploy-docker.sh
  environment:
    name: production
    url: https://psono.pw
  only:
    - /^v[0-9]*\.[0-9]*\.[0-9]*$/


deploy-github:
  except:
    - schedules
  stage: deploy
  image: psono-docker.jfrog.io/docker:git
  services:
    - docker:18-dind
  script:
    - sh ./var/deploy-github.sh
  environment:
    name: github
    url: https://github.com/psono/psono-client
  only:
    - /^v[0-9]*\.[0-9]*\.[0-9]*$/


deploy-chrome:
  except:
    - schedules
  stage: deploy
  image: psono-docker.jfrog.io/ubuntu:16.04
  script:
    - sh ./var/build-ubuntu.sh
    - sh ./var/deploy-chrome-extension.sh
  environment:
    name: chrome-webstore
    url: https://chrome.google.com/webstore/detail/psonopw/eljmjmgjkbmpmfljlmklcfineebidmlo
  only:
    - /^v[0-9]*\.[0-9]*\.[0-9]*$/


deploy-firefox:
  except:
    - schedules
  stage: deploy
  image: psono-docker.jfrog.io/ubuntu:16.04
  script:
    - sh ./var/build-ubuntu.sh
    - sh ./var/deploy-firefox-extension.sh
  environment:
    name: firefox-webstore
    url: https://addons.mozilla.org/de/firefox/addon/psono-pw-password-manager/
  only:
    - /^v[0-9]*\.[0-9]*\.[0-9]*$/

deploy-changelog:
  except:
    - schedules
  stage: deploy
  image: psono-docker.jfrog.io/ubuntu:16.04
  script:
    - sh ./var/deploy_changelog.sh
  environment:
    name: static.psono.com
    url: https://static.psono.com/gitlab.com/psono/psono-client/changelog.json
  only:
    - /^v[0-9]*\.[0-9]*\.[0-9]*$/


