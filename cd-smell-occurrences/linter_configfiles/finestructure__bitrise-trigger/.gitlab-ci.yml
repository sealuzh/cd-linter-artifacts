variables:
  IMAGE: $CI_REGISTRY_IMAGE:$CI_COMMIT_SHA
  APP_ID: a1c82fc91e4dfe93
  REF: $CI_COMMIT_REF_NAME
  WORKFLOW: primary
  # set via secret variables
  API_TOKEN: $BITRISE_API_TOKEN
  BUILD_TOKEN: $BITRISE_BUILD_TRIGGER_TOKEN


stages:
  - build
  - test
  - release


build-sha:
  stage: build
  image: docker:latest
  services:
    - docker:dind
  script:
    - docker login -u gitlab-ci-token -p $CI_JOB_TOKEN $CI_REGISTRY
    - docker build --pull -t $IMAGE .
    - docker push $IMAGE


unit test:
  stage: test
  image: $IMAGE
  script:
    - pytest


test basic:
  stage: test
  image: $IMAGE
  script: |
    bitrise-trigger \
      --api-token="$API_TOKEN" \
      --build-token="$BUILD_TOKEN" \
      -r "$REF" \
      -e foo=bar \
      -e other=ignored \
      -w "$WORKFLOW" \
      -c $CI_COMMIT_SHA \
      -m "triggered by `$CI_JOB_NAME/$REF` $CI_JOB_URL" \
      "$APP_ID"


test detached:
  stage: test
  image: $IMAGE
  script: |
    bitrise-trigger \
      -d \
      --build-token="$BUILD_TOKEN" \
      -r "$REF" \
      -w no-env \
      -c $CI_COMMIT_SHA \
      -m "triggered by `$CI_JOB_NAME/$REF` $CI_JOB_URL" \
      "$APP_ID"


.release_template: &release_template
  stage: release
  image: docker:latest
  services:
    - docker:dind


.image_release: &image_release
  script:
    - docker login -u gitlab-ci-token -p $CI_JOB_TOKEN $CI_REGISTRY
    - docker pull $IMAGE
    - docker tag $IMAGE $RELEASE_IMAGE
    - docker push $RELEASE_IMAGE


release-latest:
  only:
    - master
  variables:
    RELEASE_IMAGE: $CI_REGISTRY_IMAGE:latest
  <<: *release_template
  <<: *image_release


release-tag:
  only:
    - tags
  variables:
    RELEASE_IMAGE: $CI_REGISTRY_IMAGE:$CI_COMMIT_TAG
  <<: *release_template
  <<: *image_release

