# This file is a template, and might need editing before it works on your project.
# Official docker image.
image: docker:latest

services:
  - docker:dind

variables:
  # see https://gitlab.com/gitlab-org/gitlab-ce/issues/17861#note_12991518
  DOCKER_DRIVER: overlay

stages:
  - build
  # - deploy

# variables:
#   HEROKU_USER_NAME: _
#   HEROKU_REGISTRY: registry.heroku.com
#   HEROKU_IMAGE_PROCESS_TYPE: web
#   HEROKU_STAGING_IMAGE: $HEROKU_REGISTRY/$HEROKU_STAGING_APP_NAME/$HEROKU_IMAGE_PROCESS_TYPE
#   HEROKU_PROD_IMAGE: $HEROKU_REGISTRY/$HEROKU_PROD_APP_NAME/$HEROKU_IMAGE_PROCESS_TYPE

before_script:
  - apk add --no-cache py-pip
  - pip install docker-compose
  - docker-compose --version
  # convert / to -, remove # character from docker tag name to make it a valid name
  - export IMG_TAG=`if [ "$CI_BUILD_REF_NAME" == "master" ]; then echo "latest"; else echo $CI_BUILD_REF_NAME | sed -e 's/[\/]/-/g' | sed -e 's/[\#]//g'; fi`
  - export DOCKER_IMAGE_PROD=$CI_REGISTRY_IMAGE:$IMG_TAG
  - docker login -u "gitlab-ci-token" -p "$CI_BUILD_TOKEN" $CI_REGISTRY
  - export CI_BUILD_TIME=$(date -u +"%Y-%m-%dT%H:%M:%SZ")
  - export CI_BUILDER=gitlab-ci
  - cp .env.example .env

build-verify:
  stage: build
  script:
    - docker-compose run --rm dev yarn
    # run and check the dev container
    - docker-compose run --rm dev yarn run lint
    - docker-compose run --rm dev ng test --browsers Chrome_no_sandbox -w false
    - docker-compose run --rm dev yarn run e2e
    # build, run and check the prod image
    - docker-compose run --rm dev ng build --prod
    - docker-compose -f docker-compose.prod.yml build prod
    - docker push $DOCKER_IMAGE_PROD

