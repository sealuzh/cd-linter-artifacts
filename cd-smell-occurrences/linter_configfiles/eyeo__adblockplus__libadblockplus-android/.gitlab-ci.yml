stages:
  - unit_test
  - build
  - device_tests
  - publish

.job_template: &common_build_all
  before_script:
    # It seems gitlab does not create fully-fledged .git directory but we utilize .git/info/exclude
    # directly in ensure_dependencies.py and therefore we have to provide the directory path.
    - mkdir -p .git/info
    - ./ensure_dependencies.py
    - cd ./libadblockplus
    - make TARGET_OS=android ABP_TARGET_ARCH=arm Configuration=release get-prebuilt-v8
    - make TARGET_OS=android ABP_TARGET_ARCH=arm Configuration=release
    - make TARGET_OS=android ABP_TARGET_ARCH=arm64 Configuration=release get-prebuilt-v8
    - make TARGET_OS=android ABP_TARGET_ARCH=arm64 Configuration=release
    - make TARGET_OS=android ABP_TARGET_ARCH=ia32 Configuration=release get-prebuilt-v8
    - make TARGET_OS=android ABP_TARGET_ARCH=ia32 Configuration=release
    - cd ..

gradle_unit_tests:
  stage: unit_test
  script:
    - ./gradlew test
  artifacts:
    reports:
      junit: adblock-android/build/test-results/*/TEST-*.xml

build_libadblockplus-android:arm:
  stage: build
  before_script:
    # It seems gitlab does not create fully-fledged .git directory but we utilize .git/info/exclude
    # directly in ensure_dependencies.py and therefore we have to provide the directory path.
    - mkdir -p .git/info
    - ./ensure_dependencies.py
    - cd ./libadblockplus
    - make TARGET_OS=android ABP_TARGET_ARCH=arm Configuration=release get-prebuilt-v8
    - make TARGET_OS=android ABP_TARGET_ARCH=arm Configuration=release
    - cd ..
  script:
    - ./gradlew clean assembleAbi_arm

build_libadblockplus-android:arm64:
  stage: build
  before_script:
    # It seems gitlab does not create fully-fledged .git directory but we utilize .git/info/exclude
    # directly in ensure_dependencies.py and therefore we have to provide the directory path.
    - mkdir -p .git/info
    - ./ensure_dependencies.py
    - cd ./libadblockplus
    - make TARGET_OS=android ABP_TARGET_ARCH=arm64 Configuration=release get-prebuilt-v8
    - make TARGET_OS=android ABP_TARGET_ARCH=arm64 Configuration=release
    - cd ..
  script:
    - ./gradlew clean assembleAbi_arm64

build_libadblockplus-android:x86:
  stage: build
  before_script:
    # It seems gitlab does not create fully-fledged .git directory but we utilize .git/info/exclude
    # directly in ensure_dependencies.py and therefore we have to provide the directory path.
    - mkdir -p .git/info
    - ./ensure_dependencies.py
    - cd ./libadblockplus
    - make TARGET_OS=android ABP_TARGET_ARCH=ia32 Configuration=release get-prebuilt-v8
    - make TARGET_OS=android ABP_TARGET_ARCH=ia32 Configuration=release
    - cd ..
  script:
    - ./gradlew clean assembleAbi_x86

build_libadblockplus-android:all:
  <<: *common_build_all
  stage: build
  script:
    - ./gradlew clean assemble assembleAndroidTest
  artifacts:
    paths:
      - adblock-android-webviewapp/build/outputs/apk/release/adblock-android-webviewapp-release-unsigned.apk
      - adblock-android-webviewapp/build/outputs/apk/debug/adblock-android-webviewapp-debug.apk
      # The test APK is used later in the device testing
      - adblock-android/build/outputs/apk/androidTest/abi_all/debug/adblock-android-abi_all-debug-androidTest.apk


build_libadblockplus-android:custom-jni:
  stage: build
  before_script:
    # It seems gitlab does not create fully-fledged .git directory but we utilize .git/info/exclude
    # directly in ensure_dependencies.py and therefore we have to provide the directory path.
    - mkdir -p .git/info
    - ./ensure_dependencies.py
    - cd ./libadblockplus
    - make TARGET_OS=android ABP_TARGET_ARCH=arm Configuration=release get-prebuilt-v8
    - make TARGET_OS=android ABP_TARGET_ARCH=arm Configuration=release
    - cd ..
  script:
    - LIBABP_SHARED_LIBRARY_NAME=adblockplus ./gradlew clean assembleAbi_arm

build_libadblockplus-android:without-jni:
  stage: build
  # Don't get dependencies because current dependencies are merely libadblockplus but we don't need it.
  # If the parameter is working correctly then the building should succeed without libadblockplus.
  script:
    - SKIP_JNI_COMPILATION=true ./gradlew clean assemble

testobject_tests:
  stage: device_tests
  script:
    - test -z ${TESTOBJ_PROJECT_KEY} && echo "echo TESTOBJ_PROJECT_KEY not set. Unable to run tests." && exit 1
    - test -f /opt/ci/runner.jar || wget https://s3.amazonaws.com/saucelabs-runner/v1.8/runner.jar -O /opt/ci/runner.jar
    # Docs for running tests on testobject:
    # https://wiki.saucelabs.com/display/DOCS/Command+Reference+for+Sauce+Runner+for+Real+Devices
    - java -jar /opt/ci/runner.jar espresso \
        --test ./adblock-android/build/outputs/apk/androidTest/abi_all/debug/adblock-android-abi_all-debug-androidTest.apk \
        --app ./adblock-android-webviewapp/build/outputs/apk/debug/adblock-android-webviewapp-debug.apk \
        --testname ${CI_JOB_URL} \
        --apikey ${TESTOBJ_PROJECT_KEY} --datacenter EU
  artifacts:
    reports:
      junit: philll-adblockwebview-app-*.xml

publish_to_bintray:
  <<: *common_build_all
  stage: publish
  only:
    - tags
  script:
    - |
      if [[ ${DRY_RUN:-true} == "true" ]] ; then
        echo 'Note: $DRY_RUN is currently "true", run pipeline manually and set to "false" to actually publish to bintray'
      fi
    - ./gradlew bintrayUpload -PbintrayUser=${BINTRAY_USERNAME:-unset} -PbintrayKey=${BINTRAY_KEY:-unset} -PdryRun=${DRY_RUN:-true}

