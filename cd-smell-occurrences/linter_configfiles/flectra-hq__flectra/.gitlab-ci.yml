stages:
  - unittest
  - build
  - integrationtest
  - builddev
  - deploy
  - package

variables:
  GITLAB_REGISTRY: "registry.gitlab.com/${CI_PROJECT_PATH}"
  UBUNTU_BASE_IMAGE: "registry.gitlab.com/flectra-hq/flectra/base/ubuntu"
  UBUNTU_FLECTRA_IMAGE: "registry.gitlab.com/${CI_PROJECT_PATH}/ubuntu"
  UBUNTUDEV_FLECTRA_IMAGE: "registry.gitlab.com/${CI_PROJECT_PATH}/ubuntudev"
  #  DOCKER_HOST: tcp://docker:2375
  #  DOCKER_DRIVER: overlay2

  # Configure postgres service (https://hub.docker.com/_/postgres/)
  POSTGRES_DB: postgres
  POSTGRES_USER: flectra
  POSTGRES_PASSWORD: flectra
  POSTGRES_HOST: postgres
  POSTGRES_PORT: "5432"

#--------------------------------------------------------------------
# Job Templates
#--------------------------------------------------------------------
.psql9:template:
  services: &psql9_definition
    - name: postgres:9-alpine
      alias: postgres9

.psql10:template:
  services: &psql10_definition
    - name: postgres:10-alpine
      alias: postgres10

.psql11:template:
  services: &psql11_definition
    - name: postgres:11-alpine
      alias: postgres11

.unittest:template: &unittest_definition
  image: ${UBUNTU_BASE_IMAGE}:latest
  stage: unittest
  artifacts:
    name: "$CI_JOB_NAME-$CI_COMMIT_REF_NAME"
    paths:
      - flectra.log
    when: always
    expire_in: 2 week
  coverage: '/^TOTAL.*\s+(\d+\%)$/'
  only:
    - branches
  except:
    - schedules

.build:template: &build_definition
  services:
    - name: docker:dind
  except:
    - schedules
  image: docker:stable

.integrationtest:template: &integrationtest_definition
  stage: integrationtest
  artifacts:
    name: "$CI_JOB_NAME-$CI_COMMIT_REF_NAME"
    paths:
      - flectra.log
    when: always
    expire_in: 2 week
  only:
    - tags

.build:base:template: &build_base_definition
  stage: build
  services:
    - name: docker:dind
  only:
    - schedules
  image: docker:stable

#--------------------------------------------------------------------
# Jobs of stage unittest
#--------------------------------------------------------------------
test:pg9_base:
  <<: *unittest_definition
  services: *psql9_definition
  script:
    - cp -rp requirements.txt setup/docker/requirements.txt
    - su - flectra -c "cd ${CI_PROJECT_DIR} && ./setup/docker/gitlab-ci/gitlab_test_flectra.py --build=base --host=postgres9"

test:pg9_all:
  <<: *unittest_definition
  services: *psql9_definition
  script:
    - cp -rp requirements.txt setup/docker/requirements.txt
    - su - flectra -c "cd ${CI_PROJECT_DIR} && ./setup/docker/gitlab-ci/gitlab_test_flectra.py --build=all --host=postgres9"

test:pg10_base:
  <<: *unittest_definition
  services: *psql10_definition
  script:
    - cp -rp requirements.txt setup/docker/requirements.txt
    - su - flectra -c "cd ${CI_PROJECT_DIR} && ./setup/docker/gitlab-ci/gitlab_test_flectra.py --build=base --host=postgres10"

test:pg10_all:
  <<: *unittest_definition
  services: *psql10_definition
  script:
    - cp -rp requirements.txt setup/docker/requirements.txt
    - su - flectra -c "cd ${CI_PROJECT_DIR} && ./setup/docker/gitlab-ci/gitlab_test_flectra.py --build=all --host=postgres10"

test:pg11_base:
  <<: *unittest_definition
  services: *psql11_definition
  script:
    - cp -rp requirements.txt setup/docker/requirements.txt
    - su - flectra -c "cd ${CI_PROJECT_DIR} && ./setup/docker/gitlab-ci/gitlab_test_flectra.py --build=base --host=postgres11"

test:pg11_all:
  <<: *unittest_definition
  services: *psql11_definition
  script:
    - cp -rp requirements.txt setup/docker/requirements.txt
    - su - flectra -c "cd ${CI_PROJECT_DIR} && ./setup/docker/gitlab-ci/gitlab_test_flectra.py --build=all --host=postgres11"

#--------------------------------------------------------------------
# Jobs of stage build
#--------------------------------------------------------------------
build:flectra_ubuntu:
  <<: *build_definition
  stage: build
  only:
    - tags
  script:
    - echo -n $CI_JOB_TOKEN | docker login -u gitlab-ci-token --password-stdin $CI_REGISTRY
    - docker pull ${UBUNTU_FLECTRA_IMAGE}:latest || true
    - docker build --cache-from ${UBUNTU_FLECTRA_IMAGE}:latest
      --build-arg BASE_IMAGE=${UBUNTU_BASE_IMAGE}
      --build-arg GITLAB_OWNER=${CI_PROJECT_NAMESPACE}
      --build-arg GITLAB_COMMIT=${CI_COMMIT_SHA}
      --file ./setup/docker/flectra/ubuntu/Dockerfile
      --tag ${UBUNTU_FLECTRA_IMAGE}:$CI_COMMIT_SHA
      ./setup/docker/
    - docker push ${UBUNTU_FLECTRA_IMAGE}:$CI_COMMIT_SHA

#--------------------------------------------------------------------
# Jobs of stage integrationtest
#--------------------------------------------------------------------
itest:ubuntu_pg9_all:
  <<: *integrationtest_definition
  services: *psql9_definition
  image: ${UBUNTU_FLECTRA_IMAGE}:$CI_COMMIT_SHA
  script:
    - cd ${CI_PROJECT_DIR} && ./setup/docker/gitlab-ci/gitlab_test_flectra.py --build=all --server-path=/opt/flectra --host=postgres9

itest:ubuntu_pg10_all:
  <<: *integrationtest_definition
  services: *psql10_definition
  image: ${UBUNTU_FLECTRA_IMAGE}:$CI_COMMIT_SHA
  script:
    - cd ${CI_PROJECT_DIR} && ./setup/docker/gitlab-ci/gitlab_test_flectra.py --build=all --server-path=/opt/flectra --host=postgres10

itest:ubuntu_pg11_all:
  <<: *integrationtest_definition
  services: *psql11_definition
  image: ${UBUNTU_FLECTRA_IMAGE}:$CI_COMMIT_SHA
  script:
    - cd ${CI_PROJECT_DIR} && ./setup/docker/gitlab-ci/gitlab_test_flectra.py --build=all --server-path=/opt/flectra --host=postgres11

#--------------------------------------------------------------------
# Jobs of stage builddev
#--------------------------------------------------------------------
build:flectra_ubuntu_dev:
  <<: *build_definition
  stage: builddev
  only:
    - tags
  script:
    - echo -n $CI_JOB_TOKEN | docker login -u gitlab-ci-token --password-stdin $CI_REGISTRY
    - docker pull ${UBUNTU_FLECTRA_IMAGE}:$CI_COMMIT_SHA || true
    - docker build --cache-from ${UBUNTU_FLECTRA_IMAGE}:$CI_COMMIT_SHA
      --build-arg BASE_IMAGE=${UBUNTU_FLECTRA_IMAGE}
      --build-arg BASE_TAG=${CI_COMMIT_SHA}
      --file ./setup/docker/flectra/dev/Dockerfile
      --tag ${UBUNTUDEV_FLECTRA_IMAGE}:$CI_COMMIT_SHA
      ./setup/docker/
    - docker push ${UBUNTUDEV_FLECTRA_IMAGE}:$CI_COMMIT_SHA

#--------------------------------------------------------------------
# Jobs of stage deploy
#--------------------------------------------------------------------
deploy:flectra_gitlab:
  <<: *build_definition
  stage: deploy
  only:
    - tags
  script:
    - echo -n $CI_JOB_TOKEN | docker login -u gitlab-ci-token --password-stdin $CI_REGISTRY
    - docker pull ${UBUNTU_FLECTRA_IMAGE}:$CI_COMMIT_SHA
    - docker tag ${UBUNTU_FLECTRA_IMAGE}:$CI_COMMIT_SHA ${UBUNTU_FLECTRA_IMAGE}:$CI_COMMIT_TAG
    - docker tag ${UBUNTU_FLECTRA_IMAGE}:$CI_COMMIT_SHA ${UBUNTU_FLECTRA_IMAGE}:latest
    - docker push ${UBUNTU_FLECTRA_IMAGE}:$CI_COMMIT_TAG
    - docker push ${UBUNTU_FLECTRA_IMAGE}:latest

deploy:flectradev_gitlab:
  <<: *build_definition
  stage: deploy
  only:
    - tags
  script:
    - echo -n $CI_JOB_TOKEN | docker login -u gitlab-ci-token --password-stdin $CI_REGISTRY
    - docker pull ${UBUNTUDEV_FLECTRA_IMAGE}:$CI_COMMIT_SHA
    - docker tag ${UBUNTUDEV_FLECTRA_IMAGE}:$CI_COMMIT_SHA ${UBUNTUDEV_FLECTRA_IMAGE}:$CI_COMMIT_TAG
    - docker tag ${UBUNTUDEV_FLECTRA_IMAGE}:$CI_COMMIT_SHA ${UBUNTUDEV_FLECTRA_IMAGE}:latest
    - docker push ${UBUNTUDEV_FLECTRA_IMAGE}:$CI_COMMIT_TAG
    - docker push ${UBUNTUDEV_FLECTRA_IMAGE}:latest

deploy:flectra_dockerhub:
  <<: *build_definition
  stage: deploy
  only:
    - tags
  script:
    - echo -n $DOCKER_HUB_PASSWORD | docker login -u $DOCKER_HUB_USER --password-stdin https://index.docker.io/v1/
    - docker pull ${UBUNTU_FLECTRA_IMAGE}:$CI_COMMIT_SHA
    - docker tag ${UBUNTU_FLECTRA_IMAGE}:$CI_COMMIT_SHA ${DOCKER_HUB_ROOT}/flectra:$CI_COMMIT_TAG
    - docker tag ${UBUNTU_FLECTRA_IMAGE}:$CI_COMMIT_SHA ${DOCKER_HUB_ROOT}/flectra:latest
    - docker push ${DOCKER_HUB_ROOT}/flectra:$CI_COMMIT_TAG
    - docker push ${DOCKER_HUB_ROOT}/flectra:latest

.deploy:flectra_bin:
  services:
    - name: docker:dind
    - name: postgres:10-alpine
      alias: postgres
  only:
    - tags
  image: docker:stable
  stage: package
  artifacts:
    name: "$CI_JOB_NAME-$CI_COMMIT_REF_NAME"
    paths:
      - build.log
    when: always
    expire_in: 1 day
  script:
    - apk add python3 python3-dev py-pip build-base rsync dpkg-dev rpm
    - pip3 install pexpect
    - mkdir /opt/flectra/
    - mkdir /opt/flectra/log
    - mkdir /opt/flectra/build
    - mkdir /opt/flectra/public
    - cd ${CI_PROJECT_DIR}/setup && python3 ./package.py -b /opt/flectra/build -p /opt/flectra/public --no-windows > ${CI_PROJECT_DIR}/build.log
    - find /opt/flectra/public -maxdepth 3


#--------------------------------------------------------------------
# Scheduled jobs of stage build (executed by gitlab scheduler)
#--------------------------------------------------------------------

build:base_ubuntu:
  <<: *build_base_definition
  script:
    - echo -n $CI_JOB_TOKEN | docker login -u gitlab-ci-token --password-stdin $CI_REGISTRY
    - docker pull ${UBUNTU_BASE_IMAGE}:latest || true
    - docker build --cache-from ${UBUNTU_BASE_IMAGE}:latest -f ./setup/docker/base/ubuntu/Dockerfile ./setup/docker/ --tag ${UBUNTU_BASE_IMAGE}:latest
    - docker push ${UBUNTU_BASE_IMAGE}:latest


